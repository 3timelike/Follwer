{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar vue = require('vue');\nvar lodashUnified = require('lodash-unified');\nvar index$5 = require('../../input/index.js');\nvar index$3 = require('../../icon/index.js');\nrequire('../../form/index.js');\nrequire('../../../directives/index.js');\nrequire('../../../hooks/index.js');\nrequire('../../../utils/index.js');\nvar iconsVue = require('@element-plus/icons-vue');\nrequire('../../../constants/index.js');\nvar inputNumber = require('./input-number.js');\nvar pluginVue_exportHelper = require('../../../_virtual/plugin-vue_export-helper.js');\nvar index = require('../../../hooks/use-locale/index.js');\nvar index$1 = require('../../../hooks/use-namespace/index.js');\nvar useFormItem = require('../../form/src/hooks/use-form-item.js');\nvar types = require('../../../utils/types.js');\nvar error = require('../../../utils/error.js');\nvar useFormCommonProps = require('../../form/src/hooks/use-form-common-props.js');\nvar event = require('../../../constants/event.js');\nvar shared = require('@vue/shared');\nvar index$2 = require('../../../hooks/use-deprecated/index.js');\nvar index$4 = require('../../../directives/repeat-click/index.js');\nconst _hoisted_1 = [\"aria-label\", \"onKeydown\"];\nconst _hoisted_2 = [\"aria-label\", \"onKeydown\"];\nconst __default__ = vue.defineComponent({\n  name: \"ElInputNumber\"\n});\nconst _sfc_main = /* @__PURE__ */vue.defineComponent({\n  ...__default__,\n  props: inputNumber.inputNumberProps,\n  emits: inputNumber.inputNumberEmits,\n  setup(__props, {\n    expose,\n    emit\n  }) {\n    const props = __props;\n    const {\n      t\n    } = index.useLocale();\n    const ns = index$1.useNamespace(\"input-number\");\n    const input = vue.ref();\n    const data = vue.reactive({\n      currentValue: props.modelValue,\n      userInput: null\n    });\n    const {\n      formItem\n    } = useFormItem.useFormItem();\n    const minDisabled = vue.computed(() => types.isNumber(props.modelValue) && props.modelValue <= props.min);\n    const maxDisabled = vue.computed(() => types.isNumber(props.modelValue) && props.modelValue >= props.max);\n    const numPrecision = vue.computed(() => {\n      const stepPrecision = getPrecision(props.step);\n      if (!types.isUndefined(props.precision)) {\n        if (stepPrecision > props.precision) {\n          error.debugWarn(\"InputNumber\", \"precision should not be less than the decimal places of step\");\n        }\n        return props.precision;\n      } else {\n        return Math.max(getPrecision(props.modelValue), stepPrecision);\n      }\n    });\n    const controlsAtRight = vue.computed(() => {\n      return props.controls && props.controlsPosition === \"right\";\n    });\n    const inputNumberSize = useFormCommonProps.useFormSize();\n    const inputNumberDisabled = useFormCommonProps.useFormDisabled();\n    const displayValue = vue.computed(() => {\n      if (data.userInput !== null) {\n        return data.userInput;\n      }\n      let currentValue = data.currentValue;\n      if (lodashUnified.isNil(currentValue)) return \"\";\n      if (types.isNumber(currentValue)) {\n        if (Number.isNaN(currentValue)) return \"\";\n        if (!types.isUndefined(props.precision)) {\n          currentValue = currentValue.toFixed(props.precision);\n        }\n      }\n      return currentValue;\n    });\n    const toPrecision = (num, pre) => {\n      if (types.isUndefined(pre)) pre = numPrecision.value;\n      if (pre === 0) return Math.round(num);\n      let snum = String(num);\n      const pointPos = snum.indexOf(\".\");\n      if (pointPos === -1) return num;\n      const nums = snum.replace(\".\", \"\").split(\"\");\n      const datum = nums[pointPos + pre];\n      if (!datum) return num;\n      const length = snum.length;\n      if (snum.charAt(length - 1) === \"5\") {\n        snum = `${snum.slice(0, Math.max(0, length - 1))}6`;\n      }\n      return Number.parseFloat(Number(snum).toFixed(pre));\n    };\n    const getPrecision = value => {\n      if (lodashUnified.isNil(value)) return 0;\n      const valueString = value.toString();\n      const dotPosition = valueString.indexOf(\".\");\n      let precision = 0;\n      if (dotPosition !== -1) {\n        precision = valueString.length - dotPosition - 1;\n      }\n      return precision;\n    };\n    const ensurePrecision = (val, coefficient = 1) => {\n      if (!types.isNumber(val)) return data.currentValue;\n      return toPrecision(val + props.step * coefficient);\n    };\n    const increase = () => {\n      if (props.readonly || inputNumberDisabled.value || maxDisabled.value) return;\n      const value = Number(displayValue.value) || 0;\n      const newVal = ensurePrecision(value);\n      setCurrentValue(newVal);\n      emit(event.INPUT_EVENT, data.currentValue);\n      setCurrentValueToModelValue();\n    };\n    const decrease = () => {\n      if (props.readonly || inputNumberDisabled.value || minDisabled.value) return;\n      const value = Number(displayValue.value) || 0;\n      const newVal = ensurePrecision(value, -1);\n      setCurrentValue(newVal);\n      emit(event.INPUT_EVENT, data.currentValue);\n      setCurrentValueToModelValue();\n    };\n    const verifyValue = (value, update) => {\n      const {\n        max,\n        min,\n        step,\n        precision,\n        stepStrictly,\n        valueOnClear\n      } = props;\n      if (max < min) {\n        error.throwError(\"InputNumber\", \"min should not be greater than max.\");\n      }\n      let newVal = Number(value);\n      if (lodashUnified.isNil(value) || Number.isNaN(newVal)) {\n        return null;\n      }\n      if (value === \"\") {\n        if (valueOnClear === null) {\n          return null;\n        }\n        newVal = shared.isString(valueOnClear) ? {\n          min,\n          max\n        }[valueOnClear] : valueOnClear;\n      }\n      if (stepStrictly) {\n        newVal = toPrecision(Math.round(newVal / step) * step, precision);\n      }\n      if (!types.isUndefined(precision)) {\n        newVal = toPrecision(newVal, precision);\n      }\n      if (newVal > max || newVal < min) {\n        newVal = newVal > max ? max : min;\n        update && emit(event.UPDATE_MODEL_EVENT, newVal);\n      }\n      return newVal;\n    };\n    const setCurrentValue = (value, emitChange = true) => {\n      var _a;\n      const oldVal = data.currentValue;\n      const newVal = verifyValue(value);\n      if (!emitChange) {\n        emit(event.UPDATE_MODEL_EVENT, newVal);\n        return;\n      }\n      if (oldVal === newVal && value) return;\n      data.userInput = null;\n      emit(event.UPDATE_MODEL_EVENT, newVal);\n      if (oldVal !== newVal) {\n        emit(event.CHANGE_EVENT, newVal, oldVal);\n      }\n      if (props.validateEvent) {\n        (_a = formItem == null ? void 0 : formItem.validate) == null ? void 0 : _a.call(formItem, \"change\").catch(err => error.debugWarn(err));\n      }\n      data.currentValue = newVal;\n    };\n    const handleInput = value => {\n      data.userInput = value;\n      const newVal = value === \"\" ? null : Number(value);\n      emit(event.INPUT_EVENT, newVal);\n      setCurrentValue(newVal, false);\n    };\n    const handleInputChange = value => {\n      const newVal = value !== \"\" ? Number(value) : \"\";\n      if (types.isNumber(newVal) && !Number.isNaN(newVal) || value === \"\") {\n        setCurrentValue(newVal);\n      }\n      setCurrentValueToModelValue();\n      data.userInput = null;\n    };\n    const focus = () => {\n      var _a, _b;\n      (_b = (_a = input.value) == null ? void 0 : _a.focus) == null ? void 0 : _b.call(_a);\n    };\n    const blur = () => {\n      var _a, _b;\n      (_b = (_a = input.value) == null ? void 0 : _a.blur) == null ? void 0 : _b.call(_a);\n    };\n    const handleFocus = event => {\n      emit(\"focus\", event);\n    };\n    const handleBlur = event => {\n      var _a;\n      data.userInput = null;\n      emit(\"blur\", event);\n      if (props.validateEvent) {\n        (_a = formItem == null ? void 0 : formItem.validate) == null ? void 0 : _a.call(formItem, \"blur\").catch(err => error.debugWarn(err));\n      }\n    };\n    const setCurrentValueToModelValue = () => {\n      if (data.currentValue !== props.modelValue) {\n        data.currentValue = props.modelValue;\n      }\n    };\n    const handleWheel = e => {\n      if (document.activeElement === e.target) e.preventDefault();\n    };\n    vue.watch(() => props.modelValue, (value, oldValue) => {\n      const newValue = verifyValue(value, true);\n      if (data.userInput === null && newValue !== oldValue) {\n        data.currentValue = newValue;\n      }\n    }, {\n      immediate: true\n    });\n    vue.onMounted(() => {\n      var _a;\n      const {\n        min,\n        max,\n        modelValue\n      } = props;\n      const innerInput = (_a = input.value) == null ? void 0 : _a.input;\n      innerInput.setAttribute(\"role\", \"spinbutton\");\n      if (Number.isFinite(max)) {\n        innerInput.setAttribute(\"aria-valuemax\", String(max));\n      } else {\n        innerInput.removeAttribute(\"aria-valuemax\");\n      }\n      if (Number.isFinite(min)) {\n        innerInput.setAttribute(\"aria-valuemin\", String(min));\n      } else {\n        innerInput.removeAttribute(\"aria-valuemin\");\n      }\n      innerInput.setAttribute(\"aria-valuenow\", data.currentValue || data.currentValue === 0 ? String(data.currentValue) : \"\");\n      innerInput.setAttribute(\"aria-disabled\", String(inputNumberDisabled.value));\n      if (!types.isNumber(modelValue) && modelValue != null) {\n        let val = Number(modelValue);\n        if (Number.isNaN(val)) {\n          val = null;\n        }\n        emit(event.UPDATE_MODEL_EVENT, val);\n      }\n      innerInput.addEventListener(\"wheel\", handleWheel, {\n        passive: false\n      });\n    });\n    vue.onUpdated(() => {\n      var _a, _b;\n      const innerInput = (_a = input.value) == null ? void 0 : _a.input;\n      innerInput == null ? void 0 : innerInput.setAttribute(\"aria-valuenow\", `${(_b = data.currentValue) != null ? _b : \"\"}`);\n    });\n    index$2.useDeprecated({\n      from: \"label\",\n      replacement: \"aria-label\",\n      version: \"2.8.0\",\n      scope: \"el-input-number\",\n      ref: \"https://element-plus.org/en-US/component/input-number.html\"\n    }, vue.computed(() => !!props.label));\n    expose({\n      focus,\n      blur\n    });\n    return (_ctx, _cache) => {\n      return vue.openBlock(), vue.createElementBlock(\"div\", {\n        class: vue.normalizeClass([vue.unref(ns).b(), vue.unref(ns).m(vue.unref(inputNumberSize)), vue.unref(ns).is(\"disabled\", vue.unref(inputNumberDisabled)), vue.unref(ns).is(\"without-controls\", !_ctx.controls), vue.unref(ns).is(\"controls-right\", vue.unref(controlsAtRight))]),\n        onDragstart: _cache[0] || (_cache[0] = vue.withModifiers(() => {}, [\"prevent\"]))\n      }, [_ctx.controls ? vue.withDirectives((vue.openBlock(), vue.createElementBlock(\"span\", {\n        key: 0,\n        role: \"button\",\n        \"aria-label\": vue.unref(t)(\"el.inputNumber.decrease\"),\n        class: vue.normalizeClass([vue.unref(ns).e(\"decrease\"), vue.unref(ns).is(\"disabled\", vue.unref(minDisabled))]),\n        onKeydown: vue.withKeys(decrease, [\"enter\"])\n      }, [vue.renderSlot(_ctx.$slots, \"decrease-icon\", {}, () => [vue.createVNode(vue.unref(index$3.ElIcon), null, {\n        default: vue.withCtx(() => [vue.unref(controlsAtRight) ? (vue.openBlock(), vue.createBlock(vue.unref(iconsVue.ArrowDown), {\n          key: 0\n        })) : (vue.openBlock(), vue.createBlock(vue.unref(iconsVue.Minus), {\n          key: 1\n        }))]),\n        _: 1\n      })])], 42, _hoisted_1)), [[vue.unref(index$4.vRepeatClick), decrease]]) : vue.createCommentVNode(\"v-if\", true), _ctx.controls ? vue.withDirectives((vue.openBlock(), vue.createElementBlock(\"span\", {\n        key: 1,\n        role: \"button\",\n        \"aria-label\": vue.unref(t)(\"el.inputNumber.increase\"),\n        class: vue.normalizeClass([vue.unref(ns).e(\"increase\"), vue.unref(ns).is(\"disabled\", vue.unref(maxDisabled))]),\n        onKeydown: vue.withKeys(increase, [\"enter\"])\n      }, [vue.renderSlot(_ctx.$slots, \"increase-icon\", {}, () => [vue.createVNode(vue.unref(index$3.ElIcon), null, {\n        default: vue.withCtx(() => [vue.unref(controlsAtRight) ? (vue.openBlock(), vue.createBlock(vue.unref(iconsVue.ArrowUp), {\n          key: 0\n        })) : (vue.openBlock(), vue.createBlock(vue.unref(iconsVue.Plus), {\n          key: 1\n        }))]),\n        _: 1\n      })])], 42, _hoisted_2)), [[vue.unref(index$4.vRepeatClick), increase]]) : vue.createCommentVNode(\"v-if\", true), vue.createVNode(vue.unref(index$5.ElInput), {\n        id: _ctx.id,\n        ref_key: \"input\",\n        ref: input,\n        type: \"number\",\n        step: _ctx.step,\n        \"model-value\": vue.unref(displayValue),\n        placeholder: _ctx.placeholder,\n        readonly: _ctx.readonly,\n        disabled: vue.unref(inputNumberDisabled),\n        size: vue.unref(inputNumberSize),\n        max: _ctx.max,\n        min: _ctx.min,\n        name: _ctx.name,\n        \"aria-label\": _ctx.label || _ctx.ariaLabel,\n        \"validate-event\": false,\n        onKeydown: [vue.withKeys(vue.withModifiers(increase, [\"prevent\"]), [\"up\"]), vue.withKeys(vue.withModifiers(decrease, [\"prevent\"]), [\"down\"])],\n        onBlur: handleBlur,\n        onFocus: handleFocus,\n        onInput: handleInput,\n        onChange: handleInputChange\n      }, null, 8, [\"id\", \"step\", \"model-value\", \"placeholder\", \"readonly\", \"disabled\", \"size\", \"max\", \"min\", \"name\", \"aria-label\", \"onKeydown\"])], 34);\n    };\n  }\n});\nvar InputNumber = /* @__PURE__ */pluginVue_exportHelper[\"default\"](_sfc_main, [[\"__file\", \"input-number.vue\"]]);\nexports[\"default\"] = InputNumber;","map":{"version":3,"names":["name","t","index","useLocale","ns","index$1","useNamespace","input","vue","ref","data","reactive","currentValue","props","modelValue","userInput","formItem","useFormItem","minDisabled","computed","types","isNumber","min","maxDisabled","max","numPrecision","stepPrecision","getPrecision","step","isUndefined","precision","error","debugWarn","Math","controlsAtRight","controls","controlsPosition","inputNumberSize","useFormCommonProps","useFormSize","inputNumberDisabled","useFormDisabled","displayValue","lodashUnified","isNil","Number","isNaN","toFixed","toPrecision","num","pre","value","round","snum","String","pointPos","indexOf","nums","replace","split","datum","length","charAt","slice","parseFloat","valueString","toString","dotPosition","ensurePrecision","val","coefficient","increase","readonly","newVal","setCurrentValue","emit","event","INPUT_EVENT","setCurrentValueToModelValue","decrease","verifyValue","update","stepStrictly","valueOnClear","throwError","shared","isString","UPDATE_MODEL_EVENT","emitChange","_a","oldVal","CHANGE_EVENT","validateEvent","validate","call","catch","err","handleInput","handleInputChange","focus","_b","blur","handleFocus","handleBlur","handleWheel","e","document","activeElement","target","preventDefault","watch","oldValue","newValue","immediate","onMounted","innerInput","setAttribute","isFinite","removeAttribute","addEventListener","passive","onUpdated","index$2","useDeprecated","from","replacement","version","scope"],"sources":["../../../../../../packages/components/input-number/src/input-number.vue"],"sourcesContent":["<template>\n  <div\n    :class=\"[\n      ns.b(),\n      ns.m(inputNumberSize),\n      ns.is('disabled', inputNumberDisabled),\n      ns.is('without-controls', !controls),\n      ns.is('controls-right', controlsAtRight),\n    ]\"\n    @dragstart.prevent\n  >\n    <span\n      v-if=\"controls\"\n      v-repeat-click=\"decrease\"\n      role=\"button\"\n      :aria-label=\"t('el.inputNumber.decrease')\"\n      :class=\"[ns.e('decrease'), ns.is('disabled', minDisabled)]\"\n      @keydown.enter=\"decrease\"\n    >\n      <slot name=\"decrease-icon\">\n        <el-icon>\n          <arrow-down v-if=\"controlsAtRight\" />\n          <minus v-else />\n        </el-icon>\n      </slot>\n    </span>\n    <span\n      v-if=\"controls\"\n      v-repeat-click=\"increase\"\n      role=\"button\"\n      :aria-label=\"t('el.inputNumber.increase')\"\n      :class=\"[ns.e('increase'), ns.is('disabled', maxDisabled)]\"\n      @keydown.enter=\"increase\"\n    >\n      <slot name=\"increase-icon\">\n        <el-icon>\n          <arrow-up v-if=\"controlsAtRight\" />\n          <plus v-else />\n        </el-icon>\n      </slot>\n    </span>\n    <el-input\n      :id=\"id\"\n      ref=\"input\"\n      type=\"number\"\n      :step=\"step\"\n      :model-value=\"displayValue\"\n      :placeholder=\"placeholder\"\n      :readonly=\"readonly\"\n      :disabled=\"inputNumberDisabled\"\n      :size=\"inputNumberSize\"\n      :max=\"max\"\n      :min=\"min\"\n      :name=\"name\"\n      :aria-label=\"label || ariaLabel\"\n      :validate-event=\"false\"\n      @keydown.up.prevent=\"increase\"\n      @keydown.down.prevent=\"decrease\"\n      @blur=\"handleBlur\"\n      @focus=\"handleFocus\"\n      @input=\"handleInput\"\n      @change=\"handleInputChange\"\n    />\n  </div>\n</template>\n<script lang=\"ts\" setup>\nimport { computed, onMounted, onUpdated, reactive, ref, watch } from 'vue'\nimport { isNil } from 'lodash-unified'\nimport { ElInput } from '@element-plus/components/input'\nimport { ElIcon } from '@element-plus/components/icon'\nimport {\n  useFormDisabled,\n  useFormItem,\n  useFormSize,\n} from '@element-plus/components/form'\nimport { vRepeatClick } from '@element-plus/directives'\nimport { useDeprecated, useLocale, useNamespace } from '@element-plus/hooks'\nimport {\n  debugWarn,\n  isNumber,\n  isString,\n  isUndefined,\n  throwError,\n} from '@element-plus/utils'\nimport { ArrowDown, ArrowUp, Minus, Plus } from '@element-plus/icons-vue'\nimport {\n  CHANGE_EVENT,\n  INPUT_EVENT,\n  UPDATE_MODEL_EVENT,\n} from '@element-plus/constants'\nimport { inputNumberEmits, inputNumberProps } from './input-number'\n\nimport type { InputInstance } from '@element-plus/components/input'\n\ndefineOptions({\n  name: 'ElInputNumber',\n})\n\nconst props = defineProps(inputNumberProps)\nconst emit = defineEmits(inputNumberEmits)\n\nconst { t } = useLocale()\nconst ns = useNamespace('input-number')\nconst input = ref<InputInstance>()\n\ninterface Data {\n  currentValue: number | null | undefined\n  userInput: null | number | string\n}\nconst data = reactive<Data>({\n  currentValue: props.modelValue,\n  userInput: null,\n})\n\nconst { formItem } = useFormItem()\n\nconst minDisabled = computed(\n  () => isNumber(props.modelValue) && props.modelValue <= props.min\n)\nconst maxDisabled = computed(\n  () => isNumber(props.modelValue) && props.modelValue >= props.max\n)\n\nconst numPrecision = computed(() => {\n  const stepPrecision = getPrecision(props.step)\n  if (!isUndefined(props.precision)) {\n    if (stepPrecision > props.precision) {\n      debugWarn(\n        'InputNumber',\n        'precision should not be less than the decimal places of step'\n      )\n    }\n    return props.precision\n  } else {\n    return Math.max(getPrecision(props.modelValue), stepPrecision)\n  }\n})\nconst controlsAtRight = computed(() => {\n  return props.controls && props.controlsPosition === 'right'\n})\n\nconst inputNumberSize = useFormSize()\nconst inputNumberDisabled = useFormDisabled()\n\nconst displayValue = computed(() => {\n  if (data.userInput !== null) {\n    return data.userInput\n  }\n  let currentValue: number | string | undefined | null = data.currentValue\n  if (isNil(currentValue)) return ''\n  if (isNumber(currentValue)) {\n    if (Number.isNaN(currentValue)) return ''\n    if (!isUndefined(props.precision)) {\n      currentValue = currentValue.toFixed(props.precision)\n    }\n  }\n  return currentValue\n})\nconst toPrecision = (num: number, pre?: number) => {\n  if (isUndefined(pre)) pre = numPrecision.value\n  if (pre === 0) return Math.round(num)\n  let snum = String(num)\n  const pointPos = snum.indexOf('.')\n  if (pointPos === -1) return num\n  const nums = snum.replace('.', '').split('')\n  const datum = nums[pointPos + pre]\n  if (!datum) return num\n  const length = snum.length\n  if (snum.charAt(length - 1) === '5') {\n    snum = `${snum.slice(0, Math.max(0, length - 1))}6`\n  }\n  return Number.parseFloat(Number(snum).toFixed(pre))\n}\nconst getPrecision = (value: number | null | undefined) => {\n  if (isNil(value)) return 0\n  const valueString = value.toString()\n  const dotPosition = valueString.indexOf('.')\n  let precision = 0\n  if (dotPosition !== -1) {\n    precision = valueString.length - dotPosition - 1\n  }\n  return precision\n}\nconst ensurePrecision = (val: number, coefficient: 1 | -1 = 1) => {\n  if (!isNumber(val)) return data.currentValue\n  // Solve the accuracy problem of JS decimal calculation by converting the value to integer.\n  return toPrecision(val + props.step * coefficient)\n}\nconst increase = () => {\n  if (props.readonly || inputNumberDisabled.value || maxDisabled.value) return\n  const value = Number(displayValue.value) || 0\n  const newVal = ensurePrecision(value)\n  setCurrentValue(newVal)\n  emit(INPUT_EVENT, data.currentValue)\n  setCurrentValueToModelValue()\n}\nconst decrease = () => {\n  if (props.readonly || inputNumberDisabled.value || minDisabled.value) return\n  const value = Number(displayValue.value) || 0\n  const newVal = ensurePrecision(value, -1)\n  setCurrentValue(newVal)\n  emit(INPUT_EVENT, data.currentValue)\n  setCurrentValueToModelValue()\n}\nconst verifyValue = (\n  value: number | string | null | undefined,\n  update?: boolean\n): number | null | undefined => {\n  const { max, min, step, precision, stepStrictly, valueOnClear } = props\n  if (max < min) {\n    throwError('InputNumber', 'min should not be greater than max.')\n  }\n  let newVal = Number(value)\n  if (isNil(value) || Number.isNaN(newVal)) {\n    return null\n  }\n  if (value === '') {\n    if (valueOnClear === null) {\n      return null\n    }\n    newVal = isString(valueOnClear) ? { min, max }[valueOnClear] : valueOnClear\n  }\n  if (stepStrictly) {\n    newVal = toPrecision(Math.round(newVal / step) * step, precision)\n  }\n  if (!isUndefined(precision)) {\n    newVal = toPrecision(newVal, precision)\n  }\n  if (newVal > max || newVal < min) {\n    newVal = newVal > max ? max : min\n    update && emit(UPDATE_MODEL_EVENT, newVal)\n  }\n  return newVal\n}\nconst setCurrentValue = (\n  value: number | string | null | undefined,\n  emitChange = true\n) => {\n  const oldVal = data.currentValue\n  const newVal = verifyValue(value)\n  if (!emitChange) {\n    emit(UPDATE_MODEL_EVENT, newVal!)\n    return\n  }\n  if (oldVal === newVal && value) return\n  data.userInput = null\n  emit(UPDATE_MODEL_EVENT, newVal!)\n  if (oldVal !== newVal) {\n    emit(CHANGE_EVENT, newVal!, oldVal!)\n  }\n  if (props.validateEvent) {\n    formItem?.validate?.('change').catch((err) => debugWarn(err))\n  }\n  data.currentValue = newVal\n}\nconst handleInput = (value: string) => {\n  data.userInput = value\n  const newVal = value === '' ? null : Number(value)\n  emit(INPUT_EVENT, newVal)\n  setCurrentValue(newVal, false)\n}\nconst handleInputChange = (value: string) => {\n  const newVal = value !== '' ? Number(value) : ''\n  if ((isNumber(newVal) && !Number.isNaN(newVal)) || value === '') {\n    setCurrentValue(newVal)\n  }\n  setCurrentValueToModelValue()\n  data.userInput = null\n}\n\nconst focus = () => {\n  input.value?.focus?.()\n}\n\nconst blur = () => {\n  input.value?.blur?.()\n}\n\nconst handleFocus = (event: MouseEvent | FocusEvent) => {\n  emit('focus', event)\n}\n\nconst handleBlur = (event: MouseEvent | FocusEvent) => {\n  data.userInput = null\n  emit('blur', event)\n  if (props.validateEvent) {\n    formItem?.validate?.('blur').catch((err) => debugWarn(err))\n  }\n}\n\nconst setCurrentValueToModelValue = () => {\n  if (data.currentValue !== props.modelValue) {\n    data.currentValue = props.modelValue\n  }\n}\nconst handleWheel = (e: WheelEvent) => {\n  if (document.activeElement === e.target) e.preventDefault()\n}\n\nwatch(\n  () => props.modelValue,\n  (value, oldValue) => {\n    const newValue = verifyValue(value, true)\n    if (data.userInput === null && newValue !== oldValue) {\n      data.currentValue = newValue\n    }\n  },\n  { immediate: true }\n)\nonMounted(() => {\n  const { min, max, modelValue } = props\n  const innerInput = input.value?.input as HTMLInputElement\n  innerInput.setAttribute('role', 'spinbutton')\n  if (Number.isFinite(max)) {\n    innerInput.setAttribute('aria-valuemax', String(max))\n  } else {\n    innerInput.removeAttribute('aria-valuemax')\n  }\n  if (Number.isFinite(min)) {\n    innerInput.setAttribute('aria-valuemin', String(min))\n  } else {\n    innerInput.removeAttribute('aria-valuemin')\n  }\n  innerInput.setAttribute(\n    'aria-valuenow',\n    data.currentValue || data.currentValue === 0\n      ? String(data.currentValue)\n      : ''\n  )\n  innerInput.setAttribute('aria-disabled', String(inputNumberDisabled.value))\n  if (!isNumber(modelValue) && modelValue != null) {\n    let val: number | null = Number(modelValue)\n    if (Number.isNaN(val)) {\n      val = null\n    }\n    emit(UPDATE_MODEL_EVENT, val!)\n  }\n  innerInput.addEventListener('wheel', handleWheel, { passive: false })\n})\nonUpdated(() => {\n  const innerInput = input.value?.input\n  innerInput?.setAttribute('aria-valuenow', `${data.currentValue ?? ''}`)\n})\nuseDeprecated(\n  {\n    from: 'label',\n    replacement: 'aria-label',\n    version: '2.8.0',\n    scope: 'el-input-number',\n    ref: 'https://element-plus.org/en-US/component/input-number.html',\n  },\n  computed(() => !!props.label)\n)\ndefineExpose({\n  /** @description get focus the input component */\n  focus,\n  /** @description remove focus the input component */\n  blur,\n})\n</script>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}