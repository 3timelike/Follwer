{"ast":null,"code":"'use strict';\n\nrequire(\"core-js/modules/es.array.push.js\");\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar vue = require('vue');\nrequire('../../../form/index.js');\nrequire('../../../../utils/index.js');\nrequire('../../../../hooks/index.js');\nvar useCheckboxDisabled = require('./use-checkbox-disabled.js');\nvar useCheckboxEvent = require('./use-checkbox-event.js');\nvar useCheckboxModel = require('./use-checkbox-model.js');\nvar useCheckboxStatus = require('./use-checkbox-status.js');\nvar useFormItem = require('../../../form/src/hooks/use-form-item.js');\nvar shared = require('@vue/shared');\nvar index = require('../../../../hooks/use-deprecated/index.js');\nvar types = require('../../../../utils/types.js');\nconst useCheckbox = (props, slots) => {\n  const {\n    formItem: elFormItem\n  } = useFormItem.useFormItem();\n  const {\n    model,\n    isGroup,\n    isLimitExceeded\n  } = useCheckboxModel.useCheckboxModel(props);\n  const {\n    isFocused,\n    isChecked,\n    checkboxButtonSize,\n    checkboxSize,\n    hasOwnLabel,\n    actualValue\n  } = useCheckboxStatus.useCheckboxStatus(props, slots, {\n    model\n  });\n  const {\n    isDisabled\n  } = useCheckboxDisabled.useCheckboxDisabled({\n    model,\n    isChecked\n  });\n  const {\n    inputId,\n    isLabeledByFormItem\n  } = useFormItem.useFormItemInputId(props, {\n    formItemContext: elFormItem,\n    disableIdGeneration: hasOwnLabel,\n    disableIdManagement: isGroup\n  });\n  const {\n    handleChange,\n    onClickRoot\n  } = useCheckboxEvent.useCheckboxEvent(props, {\n    model,\n    isLimitExceeded,\n    hasOwnLabel,\n    isDisabled,\n    isLabeledByFormItem\n  });\n  const setStoreValue = () => {\n    function addToStore() {\n      var _a, _b;\n      if (shared.isArray(model.value) && !model.value.includes(actualValue.value)) {\n        model.value.push(actualValue.value);\n      } else {\n        model.value = (_b = (_a = props.trueValue) != null ? _a : props.trueLabel) != null ? _b : true;\n      }\n    }\n    props.checked && addToStore();\n  };\n  setStoreValue();\n  index.useDeprecated({\n    from: \"controls\",\n    replacement: \"aria-controls\",\n    version: \"2.8.0\",\n    scope: \"el-checkbox\",\n    ref: \"https://element-plus.org/en-US/component/checkbox.html\"\n  }, vue.computed(() => !!props.controls));\n  index.useDeprecated({\n    from: \"label act as value\",\n    replacement: \"value\",\n    version: \"3.0.0\",\n    scope: \"el-checkbox\",\n    ref: \"https://element-plus.org/en-US/component/checkbox.html\"\n  }, vue.computed(() => isGroup.value && types.isPropAbsent(props.value)));\n  index.useDeprecated({\n    from: \"true-label\",\n    replacement: \"true-value\",\n    version: \"3.0.0\",\n    scope: \"el-checkbox\",\n    ref: \"https://element-plus.org/en-US/component/checkbox.html\"\n  }, vue.computed(() => !!props.trueLabel));\n  index.useDeprecated({\n    from: \"false-label\",\n    replacement: \"false-value\",\n    version: \"3.0.0\",\n    scope: \"el-checkbox\",\n    ref: \"https://element-plus.org/en-US/component/checkbox.html\"\n  }, vue.computed(() => !!props.falseLabel));\n  return {\n    inputId,\n    isLabeledByFormItem,\n    isChecked,\n    isDisabled,\n    isFocused,\n    checkboxButtonSize,\n    checkboxSize,\n    hasOwnLabel,\n    model,\n    actualValue,\n    handleChange,\n    onClickRoot\n  };\n};\nexports.useCheckbox = useCheckbox;","map":{"version":3,"names":["useCheckbox","props","slots","formItem","elFormItem","useFormItem","model","isGroup","isLimitExceeded","useCheckboxModel","isFocused","isChecked","checkboxButtonSize","checkboxSize","hasOwnLabel","actualValue","useCheckboxStatus","isDisabled","useCheckboxDisabled","inputId","isLabeledByFormItem","useFormItemInputId","formItemContext","disableIdGeneration","disableIdManagement","handleChange","onClickRoot","useCheckboxEvent","setStoreValue","addToStore","_a","_b","shared","isArray","value","includes","push","trueValue","trueLabel","checked","index","useDeprecated","from","replacement","version","scope","ref","vue","computed","controls","types","isPropAbsent","falseLabel"],"sources":["../../../../../../../packages/components/checkbox/src/composables/use-checkbox.ts"],"sourcesContent":["import { computed } from 'vue'\nimport { useFormItem, useFormItemInputId } from '@element-plus/components/form'\nimport { isArray, isPropAbsent } from '@element-plus/utils'\nimport { useDeprecated } from '@element-plus/hooks'\nimport { useCheckboxDisabled } from './use-checkbox-disabled'\nimport { useCheckboxEvent } from './use-checkbox-event'\nimport { useCheckboxModel } from './use-checkbox-model'\nimport { useCheckboxStatus } from './use-checkbox-status'\nimport type { ComponentInternalInstance } from 'vue'\n\nimport type { CheckboxProps } from '../checkbox'\n\nexport const useCheckbox = (\n  props: CheckboxProps,\n  slots: ComponentInternalInstance['slots']\n) => {\n  const { formItem: elFormItem } = useFormItem()\n  const { model, isGroup, isLimitExceeded } = useCheckboxModel(props)\n  const {\n    isFocused,\n    isChecked,\n    checkboxButtonSize,\n    checkboxSize,\n    hasOwnLabel,\n    actualValue,\n  } = useCheckboxStatus(props, slots, { model })\n  const { isDisabled } = useCheckboxDisabled({ model, isChecked })\n  const { inputId, isLabeledByFormItem } = useFormItemInputId(props, {\n    formItemContext: elFormItem,\n    disableIdGeneration: hasOwnLabel,\n    disableIdManagement: isGroup,\n  })\n  const { handleChange, onClickRoot } = useCheckboxEvent(props, {\n    model,\n    isLimitExceeded,\n    hasOwnLabel,\n    isDisabled,\n    isLabeledByFormItem,\n  })\n\n  const setStoreValue = () => {\n    function addToStore() {\n      if (isArray(model.value) && !model.value.includes(actualValue.value)) {\n        model.value.push(actualValue.value)\n      } else {\n        model.value = props.trueValue ?? props.trueLabel ?? true\n      }\n    }\n    props.checked && addToStore()\n  }\n\n  setStoreValue()\n\n  useDeprecated(\n    {\n      from: 'controls',\n      replacement: 'aria-controls',\n      version: '2.8.0',\n      scope: 'el-checkbox',\n      ref: 'https://element-plus.org/en-US/component/checkbox.html',\n    },\n    computed(() => !!props.controls)\n  )\n\n  useDeprecated(\n    {\n      from: 'label act as value',\n      replacement: 'value',\n      version: '3.0.0',\n      scope: 'el-checkbox',\n      ref: 'https://element-plus.org/en-US/component/checkbox.html',\n    },\n    computed(() => isGroup.value && isPropAbsent(props.value))\n  )\n\n  useDeprecated(\n    {\n      from: 'true-label',\n      replacement: 'true-value',\n      version: '3.0.0',\n      scope: 'el-checkbox',\n      ref: 'https://element-plus.org/en-US/component/checkbox.html',\n    },\n    computed(() => !!props.trueLabel)\n  )\n\n  useDeprecated(\n    {\n      from: 'false-label',\n      replacement: 'false-value',\n      version: '3.0.0',\n      scope: 'el-checkbox',\n      ref: 'https://element-plus.org/en-US/component/checkbox.html',\n    },\n    computed(() => !!props.falseLabel)\n  )\n\n  return {\n    inputId,\n    isLabeledByFormItem,\n    isChecked,\n    isDisabled,\n    isFocused,\n    checkboxButtonSize,\n    checkboxSize,\n    hasOwnLabel,\n    model,\n    actualValue,\n    handleChange,\n    onClickRoot,\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}