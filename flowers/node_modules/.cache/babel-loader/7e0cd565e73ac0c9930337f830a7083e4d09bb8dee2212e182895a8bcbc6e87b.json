{"ast":null,"code":"'use strict';\n\nrequire(\"core-js/modules/es.array.push.js\");\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar vue = require('vue');\nvar lodashUnified = require('lodash-unified');\nvar index$1 = require('../../select/index.js');\nrequire('../../../hooks/index.js');\nrequire('../../../constants/index.js');\nvar index = require('../../../hooks/use-namespace/index.js');\nvar event = require('../../../constants/event.js');\nconst useSelect = (props, {\n  attrs,\n  emit\n}, {\n  select,\n  tree,\n  key\n}) => {\n  const ns = index.useNamespace(\"tree-select\");\n  vue.watch(() => props.data, () => {\n    if (props.filterable) {\n      vue.nextTick(() => {\n        var _a, _b;\n        (_b = tree.value) == null ? void 0 : _b.filter((_a = select.value) == null ? void 0 : _a.states.inputValue);\n      });\n    }\n  }, {\n    flush: \"post\"\n  });\n  const result = {\n    ...lodashUnified.pick(vue.toRefs(props), Object.keys(index$1.ElSelect.props)),\n    ...attrs,\n    \"onUpdate:modelValue\": value => emit(event.UPDATE_MODEL_EVENT, value),\n    valueKey: key,\n    popperClass: vue.computed(() => {\n      const classes = [ns.e(\"popper\")];\n      if (props.popperClass) classes.push(props.popperClass);\n      return classes.join(\" \");\n    }),\n    filterMethod: (keyword = \"\") => {\n      var _a;\n      if (props.filterMethod) {\n        props.filterMethod(keyword);\n      } else if (props.remoteMethod) {\n        props.remoteMethod(keyword);\n      } else {\n        (_a = tree.value) == null ? void 0 : _a.filter(keyword);\n      }\n    }\n  };\n  return result;\n};\nexports.useSelect = useSelect;","map":{"version":3,"names":["useSelect","props","attrs","emit","select","tree","key","ns","index","useNamespace","vue","watch","data","filterable","nextTick","_a","_b","value","filter","states","inputValue","flush","result","lodashUnified","pick","toRefs","Object","keys","index$1","ElSelect","event","UPDATE_MODEL_EVENT","valueKey","popperClass","computed","classes","e","push","join","filterMethod","keyword","remoteMethod"],"sources":["../../../../../../packages/components/tree-select/src/select.ts"],"sourcesContent":["// @ts-nocheck\nimport { computed, nextTick, toRefs, watch } from 'vue'\nimport { pick } from 'lodash-unified'\nimport ElSelect from '@element-plus/components/select'\nimport { useNamespace } from '@element-plus/hooks'\nimport { UPDATE_MODEL_EVENT } from '@element-plus/constants'\nimport type { Ref } from 'vue'\nimport type ElTree from '@element-plus/components/tree'\n\nexport const useSelect = (\n  props,\n  { attrs, emit },\n  {\n    select,\n    tree,\n    key,\n  }: {\n    select: Ref<InstanceType<typeof ElSelect> | undefined>\n    tree: Ref<InstanceType<typeof ElTree> | undefined>\n    key: Ref<string>\n  }\n) => {\n  const ns = useNamespace('tree-select')\n\n  // update tree data when use filterMethod/remoteMethod\n  watch(\n    () => props.data,\n    () => {\n      if (props.filterable) {\n        nextTick(() => {\n          // let tree node expand only, same with tree filter\n          tree.value?.filter(select.value?.states.inputValue)\n        })\n      }\n    },\n    { flush: 'post' }\n  )\n\n  const result = {\n    ...pick(toRefs(props), Object.keys(ElSelect.props)),\n    ...attrs,\n    // attrs is not reactive, when v-model binding source changes,\n    // this listener is still old, see the bug(or test 'v-model source change'):\n    // https://github.com/element-plus/element-plus/issues/14204\n    'onUpdate:modelValue': (value) => emit(UPDATE_MODEL_EVENT, value),\n    valueKey: key,\n    popperClass: computed(() => {\n      const classes = [ns.e('popper')]\n      if (props.popperClass) classes.push(props.popperClass)\n      return classes.join(' ')\n    }),\n    filterMethod: (keyword = '') => {\n      if (props.filterMethod) {\n        props.filterMethod(keyword)\n      } else if (props.remoteMethod) {\n        props.remoteMethod(keyword)\n      } else {\n        // let tree node expand only, same with tree filter\n        tree.value?.filter(keyword)\n      }\n    },\n  }\n\n  return result\n}\n"],"mappings":";;;;;;;;;;;;;AAKY,MAACA,SAAS,GAAGA,CAACC,KAAK,EAAE;EAAEC,KAAK;EAAEC;AAAI,CAAE,EAAE;EAChDC,MAAM;EACNC,IAAI;EACJC;AACF,CAAC,KAAK;EACJ,MAAMC,EAAE,GAAGC,KAAA,CAAAC,YAAY,CAAC,aAAa,CAAC;EACtCC,GAAA,CAAAC,KAAK,CAAC,MAAMV,KAAK,CAACW,IAAI,EAAE,MAAM;IAC5B,IAAIX,KAAK,CAACY,UAAU,EAAE;MACpBH,GAAA,CAAAI,QAAQ,CAAC,MAAM;QACb,IAAIC,EAAE,EAAEC,EAAE;QACV,CAACA,EAAE,GAAGX,IAAI,CAACY,KAAK,KAAK,IAAI,GAAG,KAAK,CAAC,GAAGD,EAAE,CAACE,MAAM,CAAC,CAACH,EAAE,GAAGX,MAAM,CAACa,KAAK,KAAK,IAAI,GAAG,KAAK,CAAC,GAAGF,EAAE,CAACI,MAAM,CAACC,UAAU,CAAC;MACnH,CAAO,CAAC;IACR;EACA,CAAG,EAAE;IAAEC,KAAK,EAAE;EAAM,CAAE,CAAC;EACrB,MAAMC,MAAM,GAAG;IACb,GAAGC,aAAA,CAAAC,IAAI,CAACd,GAAA,CAAAe,MAAM,CAACxB,KAAK,CAAC,EAAEyB,MAAM,CAACC,IAAI,CAACC,OAAA,CAAAC,QAAQ,CAAC5B,KAAK,CAAC,CAAC;IACnD,GAAGC,KAAK;IACR,qBAAqB,EAAGe,KAAK,IAAKd,IAAI,CAAC2B,KAAA,CAAAC,kBAAkB,EAAEd,KAAK,CAAC;IACjEe,QAAQ,EAAE1B,GAAG;IACb2B,WAAW,EAAEvB,GAAA,CAAAwB,QAAQ,CAAC,MAAM;MAC1B,MAAMC,OAAO,GAAG,CAAC5B,EAAE,CAAC6B,CAAC,CAAC,QAAQ,CAAC,CAAC;MAChC,IAAInC,KAAK,CAACgC,WAAW,EACnBE,OAAO,CAACE,IAAI,CAACpC,KAAK,CAACgC,WAAW,CAAC;MACjC,OAAOE,OAAO,CAACG,IAAI,CAAC,GAAG,CAAC;IAC9B,CAAK,CAAC;IACFC,YAAY,EAAEA,CAACC,OAAO,GAAG,EAAE,KAAK;MAC9B,IAAIzB,EAAE;MACN,IAAId,KAAK,CAACsC,YAAY,EAAE;QACtBtC,KAAK,CAACsC,YAAY,CAACC,OAAO,CAAC;MACnC,CAAO,MAAM,IAAIvC,KAAK,CAACwC,YAAY,EAAE;QAC7BxC,KAAK,CAACwC,YAAY,CAACD,OAAO,CAAC;MACnC,CAAO,MAAM;QACL,CAACzB,EAAE,GAAGV,IAAI,CAACY,KAAK,KAAK,IAAI,GAAG,KAAK,CAAC,GAAGF,EAAE,CAACG,MAAM,CAACsB,OAAO,CAAC;MAC/D;IACA;EACA,CAAG;EACD,OAAOlB,MAAM;AACf","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}