{"ast":null,"code":"'use strict';\n\nrequire(\"core-js/modules/es.array.push.js\");\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar vue = require('vue');\nvar shared = require('@vue/shared');\nvar lodashUnified = require('lodash-unified');\nvar core = require('@vueuse/core');\nrequire('../../../hooks/index.js');\nrequire('../../../constants/index.js');\nrequire('../../../utils/index.js');\nrequire('../../form/index.js');\nvar iconsVue = require('@element-plus/icons-vue');\nvar useAllowCreate = require('./useAllowCreate.js');\nvar useInput = require('./useInput.js');\nvar useProps = require('./useProps.js');\nvar index = require('../../../hooks/use-locale/index.js');\nvar index$1 = require('../../../hooks/use-namespace/index.js');\nvar useFormItem = require('../../form/src/hooks/use-form-item.js');\nvar index$2 = require('../../../hooks/use-empty-values/index.js');\nvar index$3 = require('../../../hooks/use-focus-controller/index.js');\nvar icon = require('../../../utils/vue/icon.js');\nvar strings = require('../../../utils/strings.js');\nvar useFormCommonProps = require('../../form/src/hooks/use-form-common-props.js');\nvar event = require('../../../constants/event.js');\nvar aria = require('../../../constants/aria.js');\nvar error = require('../../../utils/error.js');\nconst MINIMUM_INPUT_WIDTH = 11;\nconst useSelect = (props, emit) => {\n  const {\n    t\n  } = index.useLocale();\n  const nsSelect = index$1.useNamespace(\"select\");\n  const nsInput = index$1.useNamespace(\"input\");\n  const {\n    form: elForm,\n    formItem: elFormItem\n  } = useFormItem.useFormItem();\n  const {\n    inputId\n  } = useFormItem.useFormItemInputId(props, {\n    formItemContext: elFormItem\n  });\n  const {\n    aliasProps,\n    getLabel,\n    getValue,\n    getDisabled,\n    getOptions\n  } = useProps.useProps(props);\n  const {\n    valueOnClear,\n    isEmptyValue\n  } = index$2.useEmptyValues(props);\n  const states = vue.reactive({\n    inputValue: \"\",\n    cachedOptions: [],\n    createdOptions: [],\n    hoveringIndex: -1,\n    inputHovering: false,\n    selectionWidth: 0,\n    calculatorWidth: 0,\n    collapseItemWidth: 0,\n    previousQuery: null,\n    previousValue: void 0,\n    selectedLabel: \"\",\n    menuVisibleOnFocus: false,\n    isBeforeHide: false\n  });\n  const popperSize = vue.ref(-1);\n  const selectRef = vue.ref(null);\n  const selectionRef = vue.ref(null);\n  const tooltipRef = vue.ref(null);\n  const tagTooltipRef = vue.ref(null);\n  const inputRef = vue.ref(null);\n  const calculatorRef = vue.ref(null);\n  const prefixRef = vue.ref(null);\n  const suffixRef = vue.ref(null);\n  const menuRef = vue.ref(null);\n  const tagMenuRef = vue.ref(null);\n  const collapseItemRef = vue.ref(null);\n  const {\n    wrapperRef,\n    isFocused,\n    handleFocus,\n    handleBlur\n  } = index$3.useFocusController(inputRef, {\n    afterFocus() {\n      if (props.automaticDropdown && !expanded.value) {\n        expanded.value = true;\n        states.menuVisibleOnFocus = true;\n      }\n    },\n    beforeBlur(event) {\n      var _a, _b;\n      return ((_a = tooltipRef.value) == null ? void 0 : _a.isFocusInsideContent(event)) || ((_b = tagTooltipRef.value) == null ? void 0 : _b.isFocusInsideContent(event));\n    },\n    afterBlur() {\n      expanded.value = false;\n      states.menuVisibleOnFocus = false;\n    }\n  });\n  const allOptions = vue.ref([]);\n  const filteredOptions = vue.ref([]);\n  const expanded = vue.ref(false);\n  const selectDisabled = vue.computed(() => props.disabled || (elForm == null ? void 0 : elForm.disabled));\n  const popupHeight = vue.computed(() => {\n    const totalHeight = filteredOptions.value.length * props.itemHeight;\n    return totalHeight > props.height ? props.height : totalHeight;\n  });\n  const hasModelValue = vue.computed(() => {\n    return props.multiple ? shared.isArray(props.modelValue) && props.modelValue.length > 0 : !isEmptyValue(props.modelValue);\n  });\n  const showClearBtn = vue.computed(() => {\n    return props.clearable && !selectDisabled.value && states.inputHovering && hasModelValue.value;\n  });\n  const iconComponent = vue.computed(() => props.remote && props.filterable ? \"\" : iconsVue.ArrowDown);\n  const iconReverse = vue.computed(() => iconComponent.value && nsSelect.is(\"reverse\", expanded.value));\n  const validateState = vue.computed(() => (elFormItem == null ? void 0 : elFormItem.validateState) || \"\");\n  const validateIcon = vue.computed(() => icon.ValidateComponentsMap[validateState.value]);\n  const debounce = vue.computed(() => props.remote ? 300 : 0);\n  const emptyText = vue.computed(() => {\n    if (props.loading) {\n      return props.loadingText || t(\"el.select.loading\");\n    } else {\n      if (props.remote && !states.inputValue && allOptions.value.length === 0) return false;\n      if (props.filterable && states.inputValue && allOptions.value.length > 0 && filteredOptions.value.length === 0) {\n        return props.noMatchText || t(\"el.select.noMatch\");\n      }\n      if (allOptions.value.length === 0) {\n        return props.noDataText || t(\"el.select.noData\");\n      }\n    }\n    return null;\n  });\n  const filterOptions = query => {\n    const isValidOption = o => {\n      if (props.filterable && shared.isFunction(props.filterMethod)) return true;\n      if (props.filterable && props.remote && shared.isFunction(props.remoteMethod)) return true;\n      const regexp = new RegExp(strings.escapeStringRegexp(query), \"i\");\n      return query ? regexp.test(getLabel(o) || \"\") : true;\n    };\n    if (props.loading) {\n      return [];\n    }\n    return [...states.createdOptions, ...props.options].reduce((all, item) => {\n      const options = getOptions(item);\n      if (shared.isArray(options)) {\n        const filtered = options.filter(isValidOption);\n        if (filtered.length > 0) {\n          all.push({\n            label: getLabel(item),\n            isTitle: true,\n            type: \"Group\"\n          }, ...filtered, {\n            type: \"Group\"\n          });\n        }\n      } else if (props.remote || isValidOption(item)) {\n        all.push(item);\n      }\n      return all;\n    }, []);\n  };\n  const updateOptions = () => {\n    allOptions.value = filterOptions(\"\");\n    filteredOptions.value = filterOptions(states.inputValue);\n  };\n  const allOptionsValueMap = vue.computed(() => {\n    const valueMap = /* @__PURE__ */new Map();\n    allOptions.value.forEach((option, index) => {\n      valueMap.set(getValueKey(getValue(option)), {\n        option,\n        index\n      });\n    });\n    return valueMap;\n  });\n  const filteredOptionsValueMap = vue.computed(() => {\n    const valueMap = /* @__PURE__ */new Map();\n    filteredOptions.value.forEach((option, index) => {\n      valueMap.set(getValueKey(getValue(option)), {\n        option,\n        index\n      });\n    });\n    return valueMap;\n  });\n  const optionsAllDisabled = vue.computed(() => filteredOptions.value.every(option => getDisabled(option)));\n  const selectSize = useFormCommonProps.useFormSize();\n  const collapseTagSize = vue.computed(() => selectSize.value === \"small\" ? \"small\" : \"default\");\n  const calculatePopperSize = () => {\n    var _a;\n    popperSize.value = ((_a = selectRef.value) == null ? void 0 : _a.offsetWidth) || 200;\n  };\n  const getGapWidth = () => {\n    if (!selectionRef.value) return 0;\n    const style = window.getComputedStyle(selectionRef.value);\n    return Number.parseFloat(style.gap || \"6px\");\n  };\n  const tagStyle = vue.computed(() => {\n    const gapWidth = getGapWidth();\n    const maxWidth = collapseItemRef.value && props.maxCollapseTags === 1 ? states.selectionWidth - states.collapseItemWidth - gapWidth : states.selectionWidth;\n    return {\n      maxWidth: `${maxWidth}px`\n    };\n  });\n  const collapseTagStyle = vue.computed(() => {\n    return {\n      maxWidth: `${states.selectionWidth}px`\n    };\n  });\n  const inputStyle = vue.computed(() => ({\n    width: `${Math.max(states.calculatorWidth, MINIMUM_INPUT_WIDTH)}px`\n  }));\n  const shouldShowPlaceholder = vue.computed(() => {\n    if (shared.isArray(props.modelValue)) {\n      return props.modelValue.length === 0 && !states.inputValue;\n    }\n    return props.filterable ? !states.inputValue : true;\n  });\n  const currentPlaceholder = vue.computed(() => {\n    var _a;\n    const _placeholder = (_a = props.placeholder) != null ? _a : t(\"el.select.placeholder\");\n    return props.multiple || !hasModelValue.value ? _placeholder : states.selectedLabel;\n  });\n  const popperRef = vue.computed(() => {\n    var _a, _b;\n    return (_b = (_a = tooltipRef.value) == null ? void 0 : _a.popperRef) == null ? void 0 : _b.contentRef;\n  });\n  const indexRef = vue.computed(() => {\n    if (props.multiple) {\n      const len = props.modelValue.length;\n      if (props.modelValue.length > 0 && filteredOptionsValueMap.value.has(props.modelValue[len - 1])) {\n        const {\n          index\n        } = filteredOptionsValueMap.value.get(props.modelValue[len - 1]);\n        return index;\n      }\n    } else {\n      if (props.modelValue && filteredOptionsValueMap.value.has(props.modelValue)) {\n        const {\n          index\n        } = filteredOptionsValueMap.value.get(props.modelValue);\n        return index;\n      }\n    }\n    return -1;\n  });\n  const dropdownMenuVisible = vue.computed({\n    get() {\n      return expanded.value && emptyText.value !== false;\n    },\n    set(val) {\n      expanded.value = val;\n    }\n  });\n  const showTagList = vue.computed(() => {\n    if (!props.multiple) {\n      return [];\n    }\n    return props.collapseTags ? states.cachedOptions.slice(0, props.maxCollapseTags) : states.cachedOptions;\n  });\n  const collapseTagList = vue.computed(() => {\n    if (!props.multiple) {\n      return [];\n    }\n    return props.collapseTags ? states.cachedOptions.slice(props.maxCollapseTags) : [];\n  });\n  const {\n    createNewOption,\n    removeNewOption,\n    selectNewOption,\n    clearAllNewOption\n  } = useAllowCreate.useAllowCreate(props, states);\n  const {\n    handleCompositionStart,\n    handleCompositionUpdate,\n    handleCompositionEnd\n  } = useInput.useInput(e => onInput(e));\n  const toggleMenu = () => {\n    if (selectDisabled.value) return;\n    if (states.menuVisibleOnFocus) {\n      states.menuVisibleOnFocus = false;\n    } else {\n      expanded.value = !expanded.value;\n    }\n  };\n  const onInputChange = () => {\n    if (states.inputValue.length > 0 && !expanded.value) {\n      expanded.value = true;\n    }\n    createNewOption(states.inputValue);\n    handleQueryChange(states.inputValue);\n  };\n  const debouncedOnInputChange = lodashUnified.debounce(onInputChange, debounce.value);\n  const handleQueryChange = val => {\n    if (states.previousQuery === val) {\n      return;\n    }\n    states.previousQuery = val;\n    if (props.filterable && shared.isFunction(props.filterMethod)) {\n      props.filterMethod(val);\n    } else if (props.filterable && props.remote && shared.isFunction(props.remoteMethod)) {\n      props.remoteMethod(val);\n    }\n    if (props.defaultFirstOption && (props.filterable || props.remote) && filteredOptions.value.length) {\n      vue.nextTick(checkDefaultFirstOption);\n    } else {\n      vue.nextTick(updateHoveringIndex);\n    }\n  };\n  const checkDefaultFirstOption = () => {\n    const optionsInDropdown = filteredOptions.value.filter(n => !n.disabled && n.type !== \"Group\");\n    const userCreatedOption = optionsInDropdown.find(n => n.created);\n    const firstOriginOption = optionsInDropdown[0];\n    states.hoveringIndex = getValueIndex(filteredOptions.value, userCreatedOption || firstOriginOption);\n  };\n  const emitChange = val => {\n    if (!lodashUnified.isEqual(props.modelValue, val)) {\n      emit(event.CHANGE_EVENT, val);\n    }\n  };\n  const update = val => {\n    emit(event.UPDATE_MODEL_EVENT, val);\n    emitChange(val);\n    states.previousValue = props.multiple ? String(val) : val;\n  };\n  const getValueIndex = (arr = [], value) => {\n    if (!shared.isObject(value)) {\n      return arr.indexOf(value);\n    }\n    const valueKey = props.valueKey;\n    let index = -1;\n    arr.some((item, i) => {\n      if (lodashUnified.get(item, valueKey) === lodashUnified.get(value, valueKey)) {\n        index = i;\n        return true;\n      }\n      return false;\n    });\n    return index;\n  };\n  const getValueKey = item => {\n    return shared.isObject(item) ? lodashUnified.get(item, props.valueKey) : item;\n  };\n  const handleResize = () => {\n    calculatePopperSize();\n  };\n  const resetSelectionWidth = () => {\n    states.selectionWidth = selectionRef.value.getBoundingClientRect().width;\n  };\n  const resetCalculatorWidth = () => {\n    states.calculatorWidth = calculatorRef.value.getBoundingClientRect().width;\n  };\n  const resetCollapseItemWidth = () => {\n    states.collapseItemWidth = collapseItemRef.value.getBoundingClientRect().width;\n  };\n  const updateTooltip = () => {\n    var _a, _b;\n    (_b = (_a = tooltipRef.value) == null ? void 0 : _a.updatePopper) == null ? void 0 : _b.call(_a);\n  };\n  const updateTagTooltip = () => {\n    var _a, _b;\n    (_b = (_a = tagTooltipRef.value) == null ? void 0 : _a.updatePopper) == null ? void 0 : _b.call(_a);\n  };\n  const onSelect = option => {\n    if (props.multiple) {\n      let selectedOptions = props.modelValue.slice();\n      const index = getValueIndex(selectedOptions, getValue(option));\n      if (index > -1) {\n        selectedOptions = [...selectedOptions.slice(0, index), ...selectedOptions.slice(index + 1)];\n        states.cachedOptions.splice(index, 1);\n        removeNewOption(option);\n      } else if (props.multipleLimit <= 0 || selectedOptions.length < props.multipleLimit) {\n        selectedOptions = [...selectedOptions, getValue(option)];\n        states.cachedOptions.push(option);\n        selectNewOption(option);\n      }\n      update(selectedOptions);\n      if (option.created) {\n        handleQueryChange(\"\");\n      }\n      if (props.filterable && !props.reserveKeyword) {\n        states.inputValue = \"\";\n      }\n    } else {\n      states.selectedLabel = getLabel(option);\n      update(getValue(option));\n      expanded.value = false;\n      selectNewOption(option);\n      if (!option.created) {\n        clearAllNewOption();\n      }\n    }\n    focus();\n  };\n  const deleteTag = (event, option) => {\n    let selectedOptions = props.modelValue.slice();\n    const index = getValueIndex(selectedOptions, getValue(option));\n    if (index > -1 && !selectDisabled.value) {\n      selectedOptions = [...props.modelValue.slice(0, index), ...props.modelValue.slice(index + 1)];\n      states.cachedOptions.splice(index, 1);\n      update(selectedOptions);\n      emit(\"remove-tag\", getValue(option));\n      removeNewOption(option);\n    }\n    event.stopPropagation();\n    focus();\n  };\n  const focus = () => {\n    var _a;\n    (_a = inputRef.value) == null ? void 0 : _a.focus();\n  };\n  const blur = () => {\n    var _a;\n    (_a = inputRef.value) == null ? void 0 : _a.blur();\n  };\n  const handleEsc = () => {\n    if (states.inputValue.length > 0) {\n      states.inputValue = \"\";\n    } else {\n      expanded.value = false;\n    }\n  };\n  const getLastNotDisabledIndex = value => lodashUnified.findLastIndex(value, it => !states.cachedOptions.some(option => getValue(option) === it && getDisabled(option)));\n  const handleDel = e => {\n    if (!props.multiple) return;\n    if (e.code === aria.EVENT_CODE.delete) return;\n    if (states.inputValue.length === 0) {\n      e.preventDefault();\n      const selected = props.modelValue.slice();\n      const lastNotDisabledIndex = getLastNotDisabledIndex(selected);\n      if (lastNotDisabledIndex < 0) return;\n      selected.splice(lastNotDisabledIndex, 1);\n      const option = states.cachedOptions[lastNotDisabledIndex];\n      states.cachedOptions.splice(lastNotDisabledIndex, 1);\n      removeNewOption(option);\n      update(selected);\n    }\n  };\n  const handleClear = () => {\n    let emptyValue;\n    if (shared.isArray(props.modelValue)) {\n      emptyValue = [];\n    } else {\n      emptyValue = valueOnClear.value;\n    }\n    if (props.multiple) {\n      states.cachedOptions = [];\n    } else {\n      states.selectedLabel = \"\";\n    }\n    expanded.value = false;\n    update(emptyValue);\n    emit(\"clear\");\n    clearAllNewOption();\n    focus();\n  };\n  const onKeyboardNavigate = (direction, hoveringIndex = void 0) => {\n    const options = filteredOptions.value;\n    if (![\"forward\", \"backward\"].includes(direction) || selectDisabled.value || options.length <= 0 || optionsAllDisabled.value) {\n      return;\n    }\n    if (!expanded.value) {\n      return toggleMenu();\n    }\n    if (hoveringIndex === void 0) {\n      hoveringIndex = states.hoveringIndex;\n    }\n    let newIndex = -1;\n    if (direction === \"forward\") {\n      newIndex = hoveringIndex + 1;\n      if (newIndex >= options.length) {\n        newIndex = 0;\n      }\n    } else if (direction === \"backward\") {\n      newIndex = hoveringIndex - 1;\n      if (newIndex < 0 || newIndex >= options.length) {\n        newIndex = options.length - 1;\n      }\n    }\n    const option = options[newIndex];\n    if (getDisabled(option) || option.type === \"Group\") {\n      return onKeyboardNavigate(direction, newIndex);\n    } else {\n      states.hoveringIndex = newIndex;\n      scrollToItem(newIndex);\n    }\n  };\n  const onKeyboardSelect = () => {\n    if (!expanded.value) {\n      return toggleMenu();\n    } else if (~states.hoveringIndex && filteredOptions.value[states.hoveringIndex]) {\n      onSelect(filteredOptions.value[states.hoveringIndex]);\n    }\n  };\n  const onHoverOption = idx => {\n    states.hoveringIndex = idx;\n  };\n  const updateHoveringIndex = () => {\n    if (!props.multiple) {\n      states.hoveringIndex = filteredOptions.value.findIndex(item => {\n        return getValueKey(item) === getValueKey(props.modelValue);\n      });\n    } else {\n      states.hoveringIndex = filteredOptions.value.findIndex(item => props.modelValue.some(modelValue => getValueKey(modelValue) === getValueKey(item)));\n    }\n  };\n  const onInput = event => {\n    states.inputValue = event.target.value;\n    if (props.remote) {\n      debouncedOnInputChange();\n    } else {\n      return onInputChange();\n    }\n  };\n  const handleClickOutside = event => {\n    expanded.value = false;\n    if (isFocused.value) {\n      const _event = new FocusEvent(\"focus\", event);\n      handleBlur(_event);\n    }\n  };\n  const handleMenuEnter = () => {\n    states.isBeforeHide = false;\n    return vue.nextTick(() => {\n      if (~indexRef.value) {\n        scrollToItem(states.hoveringIndex);\n      }\n    });\n  };\n  const scrollToItem = index => {\n    menuRef.value.scrollToItem(index);\n  };\n  const getOption = value => {\n    const selectValue = getValueKey(value);\n    if (allOptionsValueMap.value.has(selectValue)) {\n      const {\n        option\n      } = allOptionsValueMap.value.get(selectValue);\n      return option;\n    }\n    return {\n      [aliasProps.value.value]: value,\n      [aliasProps.value.label]: value\n    };\n  };\n  const initStates = () => {\n    if (props.multiple) {\n      if (props.modelValue.length > 0) {\n        states.cachedOptions.length = 0;\n        states.previousValue = props.modelValue.toString();\n        for (const value of props.modelValue) {\n          const option = getOption(value);\n          states.cachedOptions.push(option);\n        }\n      } else {\n        states.cachedOptions = [];\n        states.previousValue = void 0;\n      }\n    } else {\n      if (hasModelValue.value) {\n        states.previousValue = props.modelValue;\n        const options = filteredOptions.value;\n        const selectedItemIndex = options.findIndex(option => getValueKey(getValue(option)) === getValueKey(props.modelValue));\n        if (~selectedItemIndex) {\n          states.selectedLabel = getLabel(options[selectedItemIndex]);\n        } else {\n          states.selectedLabel = getValueKey(props.modelValue);\n        }\n      } else {\n        states.selectedLabel = \"\";\n        states.previousValue = void 0;\n      }\n    }\n    clearAllNewOption();\n    calculatePopperSize();\n  };\n  vue.watch(expanded, val => {\n    if (val) {\n      handleQueryChange(\"\");\n    } else {\n      states.inputValue = \"\";\n      states.previousQuery = null;\n      states.isBeforeHide = true;\n      createNewOption(\"\");\n    }\n    emit(\"visible-change\", val);\n  });\n  vue.watch(() => props.modelValue, (val, oldVal) => {\n    var _a;\n    if (!val || props.multiple && val.toString() !== states.previousValue || !props.multiple && getValueKey(val) !== getValueKey(states.previousValue)) {\n      initStates();\n    }\n    if (!lodashUnified.isEqual(val, oldVal) && props.validateEvent) {\n      (_a = elFormItem == null ? void 0 : elFormItem.validate) == null ? void 0 : _a.call(elFormItem, \"change\").catch(err => error.debugWarn(err));\n    }\n  }, {\n    deep: true\n  });\n  vue.watch(() => props.options, () => {\n    const input = inputRef.value;\n    if (!input || input && document.activeElement !== input) {\n      initStates();\n    }\n  }, {\n    deep: true,\n    flush: \"post\"\n  });\n  vue.watch(() => filteredOptions.value, () => {\n    return menuRef.value && vue.nextTick(menuRef.value.resetScrollTop);\n  });\n  vue.watchEffect(() => {\n    if (states.isBeforeHide) return;\n    updateOptions();\n  });\n  vue.watchEffect(() => {\n    const {\n      valueKey,\n      options\n    } = props;\n    const duplicateValue = /* @__PURE__ */new Map();\n    for (const item of options) {\n      const optionValue = getValue(item);\n      let v = optionValue;\n      if (shared.isObject(v)) {\n        v = lodashUnified.get(optionValue, valueKey);\n      }\n      if (duplicateValue.get(v)) {\n        error.debugWarn(\"ElSelectV2\", `The option values you provided seem to be duplicated, which may cause some problems, please check.`);\n        break;\n      } else {\n        duplicateValue.set(v, true);\n      }\n    }\n  });\n  vue.onMounted(() => {\n    initStates();\n  });\n  core.useResizeObserver(selectRef, handleResize);\n  core.useResizeObserver(selectionRef, resetSelectionWidth);\n  core.useResizeObserver(calculatorRef, resetCalculatorWidth);\n  core.useResizeObserver(menuRef, updateTooltip);\n  core.useResizeObserver(wrapperRef, updateTooltip);\n  core.useResizeObserver(tagMenuRef, updateTagTooltip);\n  core.useResizeObserver(collapseItemRef, resetCollapseItemWidth);\n  return {\n    inputId,\n    collapseTagSize,\n    currentPlaceholder,\n    expanded,\n    emptyText,\n    popupHeight,\n    debounce,\n    allOptions,\n    filteredOptions,\n    iconComponent,\n    iconReverse,\n    tagStyle,\n    collapseTagStyle,\n    inputStyle,\n    popperSize,\n    dropdownMenuVisible,\n    hasModelValue,\n    shouldShowPlaceholder,\n    selectDisabled,\n    selectSize,\n    showClearBtn,\n    states,\n    isFocused,\n    nsSelect,\n    nsInput,\n    calculatorRef,\n    inputRef,\n    menuRef,\n    tagMenuRef,\n    tooltipRef,\n    tagTooltipRef,\n    selectRef,\n    wrapperRef,\n    selectionRef,\n    prefixRef,\n    suffixRef,\n    collapseItemRef,\n    popperRef,\n    validateState,\n    validateIcon,\n    showTagList,\n    collapseTagList,\n    debouncedOnInputChange,\n    deleteTag,\n    getLabel,\n    getValue,\n    getDisabled,\n    getValueKey,\n    handleBlur,\n    handleClear,\n    handleClickOutside,\n    handleDel,\n    handleEsc,\n    handleFocus,\n    focus,\n    blur,\n    handleMenuEnter,\n    handleResize,\n    resetSelectionWidth,\n    resetCalculatorWidth,\n    updateTooltip,\n    updateTagTooltip,\n    updateOptions,\n    toggleMenu,\n    scrollTo: scrollToItem,\n    onInput,\n    onKeyboardNavigate,\n    onKeyboardSelect,\n    onSelect,\n    onHover: onHoverOption,\n    handleCompositionStart,\n    handleCompositionEnd,\n    handleCompositionUpdate\n  };\n};\nexports[\"default\"] = useSelect;","map":{"version":3,"names":["MINIMUM_INPUT_WIDTH","useSelect","props","emit","t","index","useLocale","nsSelect","index$1","useNamespace","nsInput","form","elForm","formItem","elFormItem","useFormItem","inputId","useFormItemInputId","formItemContext","aliasProps","getLabel","getValue","getDisabled","getOptions","useProps","valueOnClear","isEmptyValue","index$2","useEmptyValues","states","vue","reactive","inputValue","cachedOptions","createdOptions","hoveringIndex","inputHovering","selectionWidth","calculatorWidth","collapseItemWidth","previousQuery","previousValue","selectedLabel","menuVisibleOnFocus","isBeforeHide","popperSize","ref","selectRef","selectionRef","tooltipRef","tagTooltipRef","inputRef","calculatorRef","prefixRef","suffixRef","menuRef","tagMenuRef","collapseItemRef","wrapperRef","isFocused","handleFocus","handleBlur","index$3","useFocusController","afterFocus","automaticDropdown","expanded","value","beforeBlur","event","_a","_b","isFocusInsideContent","afterBlur","allOptions","filteredOptions","selectDisabled","computed","disabled","popupHeight","totalHeight","length","itemHeight","height","hasModelValue","multiple","shared","isArray","modelValue","showClearBtn","clearable","iconComponent","remote","filterable","iconsVue","ArrowDown","iconReverse","is","validateState","validateIcon","icon","ValidateComponentsMap","debounce","emptyText","loading","loadingText","noMatchText","noDataText","filterOptions","query","isValidOption","o","isFunction","filterMethod","remoteMethod","regexp","RegExp","strings","escapeStringRegexp","test","options","reduce","all","item","filtered","filter","push","label","isTitle","type","updateOptions","allOptionsValueMap","valueMap","Map","forEach","option","set","getValueKey","filteredOptionsValueMap","optionsAllDisabled","every","selectSize","useFormCommonProps","useFormSize","collapseTagSize","calculatePopperSize","offsetWidth","getGapWidth","style","window","getComputedStyle","Number","parseFloat","gap","tagStyle","gapWidth","maxWidth","maxCollapseTags","collapseTagStyle","inputStyle","width","Math","max","shouldShowPlaceholder","currentPlaceholder","_placeholder","placeholder","popperRef","contentRef","indexRef","len","has","get","dropdownMenuVisible","val","showTagList","collapseTags","slice","collapseTagList","createNewOption","removeNewOption","selectNewOption","clearAllNewOption","useAllowCreate","handleCompositionStart","handleCompositionUpdate","handleCompositionEnd","useInput","e","onInput","toggleMenu","onInputChange","handleQueryChange","debouncedOnInputChange","lodashUnified","defaultFirstOption","nextTick","checkDefaultFirstOption","updateHoveringIndex","optionsInDropdown","n","userCreatedOption","find","created","firstOriginOption","getValueIndex","emitChange","isEqual","CHANGE_EVENT","update","UPDATE_MODEL_EVENT","String","arr","isObject","indexOf","valueKey","some","i","handleResize","resetSelectionWidth","getBoundingClientRect","resetCalculatorWidth","resetCollapseItemWidth","updateTooltip","updatePopper","call","updateTagTooltip","onSelect","selectedOptions","splice","multipleLimit","reserveKeyword","focus","deleteTag","stopPropagation","blur","handleEsc","getLastNotDisabledIndex","findLastIndex","it","handleDel","code","aria","EVENT_CODE","delete","preventDefault","selected","lastNotDisabledIndex","handleClear","emptyValue","onKeyboardNavigate","direction","includes","newIndex","scrollToItem","onKeyboardSelect","onHoverOption","idx","findIndex","target","handleClickOutside","_event","FocusEvent","handleMenuEnter","getOption","selectValue","initStates","toString","selectedItemIndex","watch","oldVal","validateEvent","validate","catch","err","error","debugWarn","deep","input","document","activeElement","flush","resetScrollTop","watchEffect","duplicateValue","optionValue","v","onMounted","core","useResizeObserver","scrollTo","onHover"],"sources":["../../../../../../packages/components/select-v2/src/useSelect.ts"],"sourcesContent":["// @ts-nocheck\nimport {\n  computed,\n  nextTick,\n  onMounted,\n  reactive,\n  ref,\n  watch,\n  watchEffect,\n} from 'vue'\nimport { isArray, isFunction, isObject } from '@vue/shared'\nimport {\n  findLastIndex,\n  get,\n  isEqual,\n  debounce as lodashDebounce,\n} from 'lodash-unified'\nimport { useResizeObserver } from '@vueuse/core'\nimport {\n  useEmptyValues,\n  useFocusController,\n  useLocale,\n  useNamespace,\n} from '@element-plus/hooks'\nimport {\n  CHANGE_EVENT,\n  EVENT_CODE,\n  UPDATE_MODEL_EVENT,\n} from '@element-plus/constants'\nimport {\n  ValidateComponentsMap,\n  debugWarn,\n  escapeStringRegexp,\n} from '@element-plus/utils'\nimport {\n  useFormItem,\n  useFormItemInputId,\n  useFormSize,\n} from '@element-plus/components/form'\n\nimport { ArrowDown } from '@element-plus/icons-vue'\nimport { useAllowCreate } from './useAllowCreate'\nimport { useInput } from './useInput'\nimport { useProps } from './useProps'\n\nimport type ElTooltip from '@element-plus/components/tooltip'\nimport type { Option, OptionType } from './select.types'\nimport type { ISelectV2Props } from './token'\n\nconst MINIMUM_INPUT_WIDTH = 11\n\nconst useSelect = (props: ISelectV2Props, emit) => {\n  // inject\n  const { t } = useLocale()\n  const nsSelect = useNamespace('select')\n  const nsInput = useNamespace('input')\n  const { form: elForm, formItem: elFormItem } = useFormItem()\n  const { inputId } = useFormItemInputId(props, {\n    formItemContext: elFormItem,\n  })\n  const { aliasProps, getLabel, getValue, getDisabled, getOptions } =\n    useProps(props)\n  const { valueOnClear, isEmptyValue } = useEmptyValues(props)\n\n  const states = reactive({\n    inputValue: '',\n    cachedOptions: [] as Option[],\n    createdOptions: [] as Option[],\n    hoveringIndex: -1,\n    inputHovering: false,\n    selectionWidth: 0,\n    calculatorWidth: 0,\n    collapseItemWidth: 0,\n    previousQuery: null,\n    previousValue: undefined,\n    selectedLabel: '',\n    menuVisibleOnFocus: false,\n    isBeforeHide: false,\n  })\n\n  // data refs\n  const popperSize = ref(-1)\n\n  // DOM & Component refs\n  const selectRef = ref<HTMLElement>(null)\n  const selectionRef = ref<HTMLElement>(null)\n  const tooltipRef = ref<InstanceType<typeof ElTooltip> | null>(null)\n  const tagTooltipRef = ref<InstanceType<typeof ElTooltip> | null>(null)\n  const inputRef = ref<HTMLElement>(null)\n  const calculatorRef = ref<HTMLElement>(null)\n  const prefixRef = ref<HTMLElement>(null)\n  const suffixRef = ref<HTMLElement>(null)\n  const menuRef = ref<HTMLElement>(null)\n  const tagMenuRef = ref<HTMLElement>(null)\n  const collapseItemRef = ref<HTMLElement>(null)\n\n  const { wrapperRef, isFocused, handleFocus, handleBlur } = useFocusController(\n    inputRef,\n    {\n      afterFocus() {\n        if (props.automaticDropdown && !expanded.value) {\n          expanded.value = true\n          states.menuVisibleOnFocus = true\n        }\n      },\n      beforeBlur(event) {\n        return (\n          tooltipRef.value?.isFocusInsideContent(event) ||\n          tagTooltipRef.value?.isFocusInsideContent(event)\n        )\n      },\n      afterBlur() {\n        expanded.value = false\n        states.menuVisibleOnFocus = false\n      },\n    }\n  )\n\n  const allOptions = ref([])\n  const filteredOptions = ref([])\n  // the controller of the expanded popup\n  const expanded = ref(false)\n\n  const selectDisabled = computed(() => props.disabled || elForm?.disabled)\n\n  const popupHeight = computed(() => {\n    const totalHeight = filteredOptions.value.length * props.itemHeight\n    return totalHeight > props.height ? props.height : totalHeight\n  })\n\n  const hasModelValue = computed(() => {\n    return props.multiple\n      ? isArray(props.modelValue) && props.modelValue.length > 0\n      : !isEmptyValue(props.modelValue)\n  })\n\n  const showClearBtn = computed(() => {\n    return (\n      props.clearable &&\n      !selectDisabled.value &&\n      states.inputHovering &&\n      hasModelValue.value\n    )\n  })\n\n  const iconComponent = computed(() =>\n    props.remote && props.filterable ? '' : ArrowDown\n  )\n\n  const iconReverse = computed(\n    () => iconComponent.value && nsSelect.is('reverse', expanded.value)\n  )\n\n  const validateState = computed(() => elFormItem?.validateState || '')\n  const validateIcon = computed(\n    () => ValidateComponentsMap[validateState.value]\n  )\n\n  const debounce = computed(() => (props.remote ? 300 : 0))\n\n  // filteredOptions includes flatten the data into one dimensional array.\n  const emptyText = computed(() => {\n    if (props.loading) {\n      return props.loadingText || t('el.select.loading')\n    } else {\n      if (props.remote && !states.inputValue && allOptions.value.length === 0)\n        return false\n      if (\n        props.filterable &&\n        states.inputValue &&\n        allOptions.value.length > 0 &&\n        filteredOptions.value.length === 0\n      ) {\n        return props.noMatchText || t('el.select.noMatch')\n      }\n      if (allOptions.value.length === 0) {\n        return props.noDataText || t('el.select.noData')\n      }\n    }\n    return null\n  })\n\n  const filterOptions = (query) => {\n    const isValidOption = (o: Option): boolean => {\n      if (props.filterable && isFunction(props.filterMethod)) return true\n      if (props.filterable && props.remote && isFunction(props.remoteMethod))\n        return true\n      // when query was given, we should test on the label see whether the label contains the given query\n      const regexp = new RegExp(escapeStringRegexp(query), 'i')\n      return query ? regexp.test(getLabel(o) || '') : true\n    }\n    if (props.loading) {\n      return []\n    }\n\n    return [...states.createdOptions, ...props.options].reduce((all, item) => {\n      const options = getOptions(item)\n\n      if (isArray(options)) {\n        const filtered = options.filter(isValidOption)\n\n        if (filtered.length > 0) {\n          all.push(\n            {\n              label: getLabel(item),\n              isTitle: true,\n              type: 'Group',\n            },\n            ...filtered,\n            { type: 'Group' }\n          )\n        }\n      } else if (props.remote || isValidOption(item)) {\n        all.push(item)\n      }\n\n      return all\n    }, []) as OptionType[]\n  }\n\n  const updateOptions = () => {\n    allOptions.value = filterOptions('') as OptionType[]\n    filteredOptions.value = filterOptions(states.inputValue) as OptionType[]\n  }\n\n  const allOptionsValueMap = computed(() => {\n    const valueMap = new Map()\n\n    allOptions.value.forEach((option, index) => {\n      valueMap.set(getValueKey(getValue(option)), { option, index })\n    })\n    return valueMap\n  })\n\n  const filteredOptionsValueMap = computed(() => {\n    const valueMap = new Map()\n\n    filteredOptions.value.forEach((option, index) => {\n      valueMap.set(getValueKey(getValue(option)), { option, index })\n    })\n    return valueMap\n  })\n\n  const optionsAllDisabled = computed(() =>\n    filteredOptions.value.every((option) => getDisabled(option))\n  )\n\n  const selectSize = useFormSize()\n\n  const collapseTagSize = computed(() =>\n    'small' === selectSize.value ? 'small' : 'default'\n  )\n\n  const calculatePopperSize = () => {\n    popperSize.value = selectRef.value?.offsetWidth || 200\n  }\n\n  const getGapWidth = () => {\n    if (!selectionRef.value) return 0\n    const style = window.getComputedStyle(selectionRef.value)\n    return Number.parseFloat(style.gap || '6px')\n  }\n\n  // computed style\n  const tagStyle = computed(() => {\n    const gapWidth = getGapWidth()\n    const maxWidth =\n      collapseItemRef.value && props.maxCollapseTags === 1\n        ? states.selectionWidth - states.collapseItemWidth - gapWidth\n        : states.selectionWidth\n    return { maxWidth: `${maxWidth}px` }\n  })\n\n  const collapseTagStyle = computed(() => {\n    return { maxWidth: `${states.selectionWidth}px` }\n  })\n\n  const inputStyle = computed(() => ({\n    width: `${Math.max(states.calculatorWidth, MINIMUM_INPUT_WIDTH)}px`,\n  }))\n\n  const shouldShowPlaceholder = computed(() => {\n    if (isArray(props.modelValue)) {\n      return props.modelValue.length === 0 && !states.inputValue\n    }\n\n    // when it's not multiple mode, we only determine this flag based on filterable and expanded\n    // when filterable flag is true, which means we have input box on the screen\n    return props.filterable ? !states.inputValue : true\n  })\n\n  const currentPlaceholder = computed(() => {\n    const _placeholder = props.placeholder ?? t('el.select.placeholder')\n    return props.multiple || !hasModelValue.value\n      ? _placeholder\n      : states.selectedLabel\n  })\n\n  // this obtains the actual popper DOM element.\n  const popperRef = computed(() => tooltipRef.value?.popperRef?.contentRef)\n\n  // the index with current value in options\n  const indexRef = computed<number>(() => {\n    if (props.multiple) {\n      const len = (props.modelValue as []).length\n      if (\n        (props.modelValue as Array<any>).length > 0 &&\n        filteredOptionsValueMap.value.has(props.modelValue[len - 1])\n      ) {\n        const { index } = filteredOptionsValueMap.value.get(\n          props.modelValue[len - 1]\n        )\n        return index\n      }\n    } else {\n      if (\n        props.modelValue &&\n        filteredOptionsValueMap.value.has(props.modelValue)\n      ) {\n        const { index } = filteredOptionsValueMap.value.get(props.modelValue)\n        return index\n      }\n    }\n    return -1\n  })\n\n  const dropdownMenuVisible = computed({\n    get() {\n      return expanded.value && emptyText.value !== false\n    },\n    set(val: boolean) {\n      expanded.value = val\n    },\n  })\n\n  const showTagList = computed(() => {\n    if (!props.multiple) {\n      return []\n    }\n    return props.collapseTags\n      ? states.cachedOptions.slice(0, props.maxCollapseTags)\n      : states.cachedOptions\n  })\n\n  const collapseTagList = computed(() => {\n    if (!props.multiple) {\n      return []\n    }\n    return props.collapseTags\n      ? states.cachedOptions.slice(props.maxCollapseTags)\n      : []\n  })\n\n  // hooks\n  const {\n    createNewOption,\n    removeNewOption,\n    selectNewOption,\n    clearAllNewOption,\n  } = useAllowCreate(props, states)\n  const {\n    handleCompositionStart,\n    handleCompositionUpdate,\n    handleCompositionEnd,\n  } = useInput((e) => onInput(e))\n\n  // methods\n  const toggleMenu = () => {\n    if (selectDisabled.value) return\n\n    if (states.menuVisibleOnFocus) {\n      // controlled by automaticDropdown\n      states.menuVisibleOnFocus = false\n    } else {\n      expanded.value = !expanded.value\n    }\n  }\n\n  const onInputChange = () => {\n    if (states.inputValue.length > 0 && !expanded.value) {\n      expanded.value = true\n    }\n    createNewOption(states.inputValue)\n    handleQueryChange(states.inputValue)\n  }\n\n  const debouncedOnInputChange = lodashDebounce(onInputChange, debounce.value)\n\n  const handleQueryChange = (val: string) => {\n    if (states.previousQuery === val) {\n      return\n    }\n    states.previousQuery = val\n    if (props.filterable && isFunction(props.filterMethod)) {\n      props.filterMethod(val)\n    } else if (\n      props.filterable &&\n      props.remote &&\n      isFunction(props.remoteMethod)\n    ) {\n      props.remoteMethod(val)\n    }\n    if (\n      props.defaultFirstOption &&\n      (props.filterable || props.remote) &&\n      filteredOptions.value.length\n    ) {\n      nextTick(checkDefaultFirstOption)\n    } else {\n      nextTick(updateHoveringIndex)\n    }\n  }\n\n  /**\n   * find and highlight first option as default selected\n   * @remark\n   * - if the first option in dropdown list is user-created,\n   *   it would be at the end of the optionsArray\n   *   so find it and set hover.\n   *   (NOTE: there must be only one user-created option in dropdown list with query)\n   * - if there's no user-created option in list, just find the first one as usual\n   *   (NOTE: exclude options that are disabled or in disabled-group)\n   */\n  const checkDefaultFirstOption = () => {\n    const optionsInDropdown = filteredOptions.value.filter(\n      (n) => !n.disabled && n.type !== 'Group'\n    )\n    const userCreatedOption = optionsInDropdown.find((n) => n.created)\n    const firstOriginOption = optionsInDropdown[0]\n    states.hoveringIndex = getValueIndex(\n      filteredOptions.value,\n      userCreatedOption || firstOriginOption\n    )\n  }\n\n  const emitChange = (val: any | any[]) => {\n    if (!isEqual(props.modelValue, val)) {\n      emit(CHANGE_EVENT, val)\n    }\n  }\n\n  const update = (val: any) => {\n    emit(UPDATE_MODEL_EVENT, val)\n    emitChange(val)\n    states.previousValue = props.multiple ? String(val) : val\n  }\n\n  const getValueIndex = (arr = [], value: unknown) => {\n    if (!isObject(value)) {\n      return arr.indexOf(value)\n    }\n    const valueKey = props.valueKey\n    let index = -1\n    arr.some((item, i) => {\n      if (get(item, valueKey) === get(value, valueKey)) {\n        index = i\n        return true\n      }\n      return false\n    })\n    return index\n  }\n\n  const getValueKey = (item: unknown) => {\n    return isObject(item) ? get(item, props.valueKey) : item\n  }\n\n  const handleResize = () => {\n    calculatePopperSize()\n  }\n\n  const resetSelectionWidth = () => {\n    states.selectionWidth = selectionRef.value.getBoundingClientRect().width\n  }\n\n  const resetCalculatorWidth = () => {\n    states.calculatorWidth = calculatorRef.value.getBoundingClientRect().width\n  }\n\n  const resetCollapseItemWidth = () => {\n    states.collapseItemWidth =\n      collapseItemRef.value.getBoundingClientRect().width\n  }\n\n  const updateTooltip = () => {\n    tooltipRef.value?.updatePopper?.()\n  }\n\n  const updateTagTooltip = () => {\n    tagTooltipRef.value?.updatePopper?.()\n  }\n\n  const onSelect = (option: Option) => {\n    if (props.multiple) {\n      let selectedOptions = (props.modelValue as any[]).slice()\n\n      const index = getValueIndex(selectedOptions, getValue(option))\n      if (index > -1) {\n        selectedOptions = [\n          ...selectedOptions.slice(0, index),\n          ...selectedOptions.slice(index + 1),\n        ]\n        states.cachedOptions.splice(index, 1)\n        removeNewOption(option)\n      } else if (\n        props.multipleLimit <= 0 ||\n        selectedOptions.length < props.multipleLimit\n      ) {\n        selectedOptions = [...selectedOptions, getValue(option)]\n        states.cachedOptions.push(option)\n        selectNewOption(option)\n      }\n      update(selectedOptions)\n      if (option.created) {\n        handleQueryChange('')\n      }\n      if (props.filterable && !props.reserveKeyword) {\n        states.inputValue = ''\n      }\n    } else {\n      states.selectedLabel = getLabel(option)\n      update(getValue(option))\n      expanded.value = false\n      selectNewOption(option)\n      if (!option.created) {\n        clearAllNewOption()\n      }\n    }\n    focus()\n  }\n\n  const deleteTag = (event: MouseEvent, option: Option) => {\n    let selectedOptions = (props.modelValue as any[]).slice()\n\n    const index = getValueIndex(selectedOptions, getValue(option))\n\n    if (index > -1 && !selectDisabled.value) {\n      selectedOptions = [\n        ...(props.modelValue as Array<unknown>).slice(0, index),\n        ...(props.modelValue as Array<unknown>).slice(index + 1),\n      ]\n      states.cachedOptions.splice(index, 1)\n      update(selectedOptions)\n      emit('remove-tag', getValue(option))\n      removeNewOption(option)\n    }\n    event.stopPropagation()\n    focus()\n  }\n\n  const focus = () => {\n    inputRef.value?.focus()\n  }\n\n  const blur = () => {\n    inputRef.value?.blur()\n  }\n\n  // keyboard handlers\n  const handleEsc = () => {\n    if (states.inputValue.length > 0) {\n      states.inputValue = ''\n    } else {\n      expanded.value = false\n    }\n  }\n\n  const getLastNotDisabledIndex = (value) =>\n    findLastIndex(\n      value,\n      (it) =>\n        !states.cachedOptions.some(\n          (option) => getValue(option) === it && getDisabled(option)\n        )\n    )\n\n  const handleDel = (e: KeyboardEvent) => {\n    if (!props.multiple) return\n    if (e.code === EVENT_CODE.delete) return\n    if (states.inputValue.length === 0) {\n      e.preventDefault()\n      const selected = (props.modelValue as Array<any>).slice()\n      const lastNotDisabledIndex = getLastNotDisabledIndex(selected)\n      if (lastNotDisabledIndex < 0) return\n      selected.splice(lastNotDisabledIndex, 1)\n      const option = states.cachedOptions[lastNotDisabledIndex]\n      states.cachedOptions.splice(lastNotDisabledIndex, 1)\n      removeNewOption(option)\n      update(selected)\n    }\n  }\n\n  const handleClear = () => {\n    let emptyValue: string | any[]\n    if (isArray(props.modelValue)) {\n      emptyValue = []\n    } else {\n      emptyValue = valueOnClear.value\n    }\n\n    if (props.multiple) {\n      states.cachedOptions = []\n    } else {\n      states.selectedLabel = ''\n    }\n    expanded.value = false\n    update(emptyValue)\n    emit('clear')\n    clearAllNewOption()\n    focus()\n  }\n\n  const onKeyboardNavigate = (\n    direction: 'forward' | 'backward',\n    hoveringIndex: number = undefined\n  ) => {\n    const options = filteredOptions.value\n    if (\n      !['forward', 'backward'].includes(direction) ||\n      selectDisabled.value ||\n      options.length <= 0 ||\n      optionsAllDisabled.value\n    ) {\n      return\n    }\n    if (!expanded.value) {\n      return toggleMenu()\n    }\n    if (hoveringIndex === undefined) {\n      hoveringIndex = states.hoveringIndex\n    }\n    let newIndex = -1\n    if (direction === 'forward') {\n      newIndex = hoveringIndex + 1\n      if (newIndex >= options.length) {\n        // return to the first option\n        newIndex = 0\n      }\n    } else if (direction === 'backward') {\n      newIndex = hoveringIndex - 1\n      if (newIndex < 0 || newIndex >= options.length) {\n        // navigate to the last one\n        newIndex = options.length - 1\n      }\n    }\n    const option = options[newIndex]\n    if (getDisabled(option) || option.type === 'Group') {\n      // prevent dispatching multiple nextTick callbacks.\n      return onKeyboardNavigate(direction, newIndex)\n    } else {\n      states.hoveringIndex = newIndex\n      scrollToItem(newIndex)\n    }\n  }\n\n  const onKeyboardSelect = () => {\n    if (!expanded.value) {\n      return toggleMenu()\n    } else if (\n      ~states.hoveringIndex &&\n      filteredOptions.value[states.hoveringIndex]\n    ) {\n      onSelect(filteredOptions.value[states.hoveringIndex])\n    }\n  }\n\n  const onHoverOption = (idx: number) => {\n    states.hoveringIndex = idx\n  }\n\n  const updateHoveringIndex = () => {\n    if (!props.multiple) {\n      states.hoveringIndex = filteredOptions.value.findIndex((item) => {\n        return getValueKey(item) === getValueKey(props.modelValue)\n      })\n    } else {\n      states.hoveringIndex = filteredOptions.value.findIndex((item) =>\n        props.modelValue.some(\n          (modelValue) => getValueKey(modelValue) === getValueKey(item)\n        )\n      )\n    }\n  }\n\n  const onInput = (event) => {\n    states.inputValue = event.target.value\n    if (props.remote) {\n      debouncedOnInputChange()\n    } else {\n      return onInputChange()\n    }\n  }\n\n  const handleClickOutside = (event: Event) => {\n    expanded.value = false\n\n    if (isFocused.value) {\n      const _event = new FocusEvent('focus', event)\n      handleBlur(_event)\n    }\n  }\n\n  const handleMenuEnter = () => {\n    states.isBeforeHide = false\n    return nextTick(() => {\n      if (~indexRef.value) {\n        scrollToItem(states.hoveringIndex)\n      }\n    })\n  }\n\n  const scrollToItem = (index: number) => {\n    menuRef.value.scrollToItem(index)\n  }\n\n  const getOption = (value) => {\n    // match the option with the given value, if not found, create a new option\n    const selectValue = getValueKey(value)\n\n    if (allOptionsValueMap.value.has(selectValue)) {\n      const { option } = allOptionsValueMap.value.get(selectValue)\n\n      return option\n    }\n    return {\n      [aliasProps.value.value]: value,\n      [aliasProps.value.label]: value,\n    }\n  }\n\n  const initStates = () => {\n    if (props.multiple) {\n      if ((props.modelValue as Array<any>).length > 0) {\n        states.cachedOptions.length = 0\n        states.previousValue = props.modelValue.toString()\n\n        for (const value of props.modelValue) {\n          const option = getOption(value)\n          states.cachedOptions.push(option)\n        }\n      } else {\n        states.cachedOptions = []\n        states.previousValue = undefined\n      }\n    } else {\n      if (hasModelValue.value) {\n        states.previousValue = props.modelValue\n        const options = filteredOptions.value\n        const selectedItemIndex = options.findIndex(\n          (option) =>\n            getValueKey(getValue(option)) === getValueKey(props.modelValue)\n        )\n        if (~selectedItemIndex) {\n          states.selectedLabel = getLabel(options[selectedItemIndex])\n        } else {\n          states.selectedLabel = getValueKey(props.modelValue)\n        }\n      } else {\n        states.selectedLabel = ''\n        states.previousValue = undefined\n      }\n    }\n    clearAllNewOption()\n    calculatePopperSize()\n  }\n\n  // in order to track these individually, we need to turn them into refs instead of watching the entire\n  // reactive object which could cause perf penalty when unnecessary field gets changed the watch method will\n  // be invoked.\n\n  watch(expanded, (val) => {\n    if (val) {\n      handleQueryChange('')\n    } else {\n      states.inputValue = ''\n      states.previousQuery = null\n      states.isBeforeHide = true\n      createNewOption('')\n    }\n    emit('visible-change', val)\n  })\n\n  watch(\n    () => props.modelValue,\n    (val, oldVal) => {\n      if (\n        !val ||\n        (props.multiple && val.toString() !== states.previousValue) ||\n        (!props.multiple &&\n          getValueKey(val) !== getValueKey(states.previousValue))\n      ) {\n        initStates()\n      }\n      if (!isEqual(val, oldVal) && props.validateEvent) {\n        elFormItem?.validate?.('change').catch((err) => debugWarn(err))\n      }\n    },\n    {\n      deep: true,\n    }\n  )\n\n  watch(\n    () => props.options,\n    () => {\n      const input = inputRef.value\n      // filter or remote-search scenarios are not initialized\n      if (!input || (input && document.activeElement !== input)) {\n        initStates()\n      }\n    },\n    {\n      deep: true,\n      flush: 'post',\n    }\n  )\n\n  // fix the problem that scrollTop is not reset in filterable mode\n  watch(\n    () => filteredOptions.value,\n    () => {\n      return menuRef.value && nextTick(menuRef.value.resetScrollTop)\n    }\n  )\n\n  watchEffect(() => {\n    // Anything could cause options changed, then update options\n    // If you want to control it by condition, write here\n    if (states.isBeforeHide) return\n    updateOptions()\n  })\n\n  watchEffect(() => {\n    const { valueKey, options } = props\n    const duplicateValue = new Map()\n    for (const item of options) {\n      const optionValue = getValue(item)\n      let v = optionValue\n      if (isObject(v)) {\n        v = get(optionValue, valueKey)\n      }\n      if (duplicateValue.get(v)) {\n        debugWarn(\n          'ElSelectV2',\n          `The option values you provided seem to be duplicated, which may cause some problems, please check.`\n        )\n        break\n      } else {\n        duplicateValue.set(v, true)\n      }\n    }\n  })\n\n  onMounted(() => {\n    initStates()\n  })\n  useResizeObserver(selectRef, handleResize)\n  useResizeObserver(selectionRef, resetSelectionWidth)\n  useResizeObserver(calculatorRef, resetCalculatorWidth)\n  useResizeObserver(menuRef, updateTooltip)\n  useResizeObserver(wrapperRef, updateTooltip)\n  useResizeObserver(tagMenuRef, updateTagTooltip)\n  useResizeObserver(collapseItemRef, resetCollapseItemWidth)\n\n  return {\n    // data exports\n    inputId,\n    collapseTagSize,\n    currentPlaceholder,\n    expanded,\n    emptyText,\n    popupHeight,\n    debounce,\n    allOptions,\n    filteredOptions,\n    iconComponent,\n    iconReverse,\n    tagStyle,\n    collapseTagStyle,\n    inputStyle,\n    popperSize,\n    dropdownMenuVisible,\n    hasModelValue,\n    shouldShowPlaceholder,\n    selectDisabled,\n    selectSize,\n    showClearBtn,\n    states,\n    isFocused,\n    nsSelect,\n    nsInput,\n\n    // refs items exports\n    calculatorRef,\n    inputRef,\n    menuRef,\n    tagMenuRef,\n    tooltipRef,\n    tagTooltipRef,\n    selectRef,\n    wrapperRef,\n    selectionRef,\n    prefixRef,\n    suffixRef,\n    collapseItemRef,\n\n    popperRef,\n\n    validateState,\n    validateIcon,\n    showTagList,\n    collapseTagList,\n\n    // methods exports\n    debouncedOnInputChange,\n    deleteTag,\n    getLabel,\n    getValue,\n    getDisabled,\n    getValueKey,\n    handleBlur,\n    handleClear,\n    handleClickOutside,\n    handleDel,\n    handleEsc,\n    handleFocus,\n    focus,\n    blur,\n    handleMenuEnter,\n    handleResize,\n    resetSelectionWidth,\n    resetCalculatorWidth,\n    updateTooltip,\n    updateTagTooltip,\n    updateOptions,\n    toggleMenu,\n    scrollTo: scrollToItem,\n    onInput,\n    onKeyboardNavigate,\n    onKeyboardSelect,\n    onSelect,\n    onHover: onHoverOption,\n    handleCompositionStart,\n    handleCompositionEnd,\n    handleCompositionUpdate,\n  }\n}\n\nexport default useSelect\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}