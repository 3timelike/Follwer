{"ast":null,"code":"import request from \"@/utils/index\";\nconst {\n  ElMessage\n} = require(\"element-plus\");\nexport default {\n  name: \"regist\",\n  data() {\n    // 手机号验证\n    const checkPhone = (rule, value, callback) => {\n      const phoneReg = /^1[3|4|5|6|7|8][0-9]{9}$/;\n      if (!value) {\n        return callback(new Error(\"电话号码不能为空\"));\n      }\n      setTimeout(() => {\n        if (!Number.isInteger(+value)) {\n          callback(new Error(\"请输入数字值\"));\n        } else {\n          if (phoneReg.test(value)) {\n            callback();\n          } else {\n            callback(new Error(\"电话号码格式不正确\"));\n          }\n        }\n      }, 100);\n    };\n    const password2 = (rule, value, callback) => {\n      console.log(\"验证\");\n      if (value == \"\") {\n        callback(new Error(\"请再次输入密码\"));\n      } else if (value !== this.form.password) {\n        callback(new Error(\"两次输入密码不一致!\"));\n      } else {\n        callback();\n      }\n    };\n    return {\n      showpassword: true,\n      form: {\n        username: \"\",\n        password: \"\",\n        password2: \"\",\n        name: \"\",\n        gender: \"\",\n        age: \"\",\n        phoneNum: \"\",\n        email: \"\",\n        avatar: \"\"\n      },\n      rules: {\n        username: [{\n          required: true,\n          message: \"请输入账号\",\n          trigger: \"blur\"\n        }, {\n          pattern: /^[a-zA-Z0-9]{4,9}$/,\n          message: \"必须由 4 到 9 个字母或数字组成\",\n          trigger: \"blur\"\n        }],\n        name: [{\n          required: true,\n          message: \"请输入姓名\",\n          trigger: \"blur\"\n        }, {\n          pattern: /^(?:[\\u4E00-\\u9FA5·]{2,10})$/,\n          message: \"必须由 2 到 10 个汉字组成\",\n          trigger: \"blur\"\n        }],\n        gender: [{\n          required: true,\n          message: \"请选择性别\",\n          trigger: \"change\"\n        }],\n        age: [{\n          required: true,\n          message: \"请输入年龄\",\n          trigger: \"blur\"\n        }, {\n          type: \"number\",\n          message: \"年龄必须为数字值\",\n          trigger: \"blur\"\n        }, {\n          pattern: /^([1-9]){1,2}$/,\n          message: \"范围：1-100\",\n          trigger: \"blur\"\n        }],\n        phoneNum: [{\n          required: true,\n          validator: checkPhone,\n          trigger: \"blur\"\n        }],\n        email: [{\n          type: \"email\",\n          message: \"请输入正确的邮箱地址\",\n          trigger: \"blur\"\n        }],\n        password: [{\n          required: true,\n          message: \"请输入密码\",\n          trigger: \"blur\"\n        }, {\n          min: 6,\n          max: 32,\n          message: \"长度在 6 到 16 个字符\",\n          trigger: \"blur\"\n        }],\n        password2: [{\n          validator: password2,\n          trigger: \"blur\"\n        }]\n      }\n    };\n  },\n  computed: {\n    disabled() {\n      const {\n        username,\n        password,\n        name,\n        gender,\n        age,\n        phoneNum,\n        email\n      } = this.form;\n      return Boolean(username && password && name && gender && age && phoneNum && email);\n    }\n  },\n  methods: {\n    register() {\n      this.$refs.form.validate(valid => {\n        if (valid) {\n          request.post(\"/regist\", this.form).then(res => {\n            if (res.code === 200) {\n              ElMessage({\n                message: \"注册成功\",\n                type: \"success\"\n              });\n              //注册成功跳转主页\n\n              window.sessionStorage.setItem(\"user\", JSON.stringify(res.data));\n              window.sessionStorage.setItem(\"identity\", JSON.stringify(\"user\"));\n              console.log(sessionStorage.getItem(\"identity\"));\n              this.$router.replace({\n                path: \"/home\"\n              });\n            } else {\n              ElMessage({\n                message: res.message,\n                type: \"error\"\n              });\n            }\n          });\n        } else {\n          alert(\"输入信息有误\");\n        }\n      });\n    },\n    async uploadSuccess() {\n      await request.post(\"/files/uploadAvatar\", this.form.avatar).then(res => {\n        if (res.code === \"0\") {\n          ElMessage({\n            message: \"上传成功\",\n            type: \"success\"\n          });\n          //获取头像文件名\n          this.form.avatar = res.data;\n          console.log(\"上传成功：\" + this.avatar);\n        } else {\n          ElMessage({\n            message: res.msg,\n            type: \"error\"\n          });\n        }\n      });\n    }\n  }\n};","map":{"version":3,"names":["request","ElMessage","require","name","data","checkPhone","rule","value","callback","phoneReg","Error","setTimeout","Number","isInteger","test","password2","console","log","form","password","showpassword","username","gender","age","phoneNum","email","avatar","rules","required","message","trigger","pattern","type","validator","min","max","computed","disabled","Boolean","methods","register","$refs","validate","valid","post","then","res","code","window","sessionStorage","setItem","JSON","stringify","getItem","$router","replace","path","alert","uploadSuccess","msg"],"sources":["C:/Users/zhang/Desktop/myvueeee/flowers/src/assets/js/regist.js"],"sourcesContent":["import request from \"@/utils/index\";\r\n\r\nconst {ElMessage} = require(\"element-plus\");\r\nexport default {\r\n    name: \"regist\",\r\n    data() {\r\n        // 手机号验证\r\n        const checkPhone = (rule, value, callback) => {\r\n            const phoneReg = /^1[3|4|5|6|7|8][0-9]{9}$/;\r\n            if (!value) {\r\n                return callback(new Error(\"电话号码不能为空\"));\r\n            }\r\n            setTimeout(() => {\r\n                if (!Number.isInteger(+value)) {\r\n                    callback(new Error(\"请输入数字值\"));\r\n                } else {\r\n                    if (phoneReg.test(value)) {\r\n                        callback();\r\n                    } else {\r\n                        callback(new Error(\"电话号码格式不正确\"));\r\n                    }\r\n                }\r\n            }, 100);\r\n        };\r\n        const password2 = (rule, value, callback) => {\r\n            \r\n                console.log(\"验证\");\r\n                if (value == \"\") {\r\n                    callback(new Error(\"请再次输入密码\"));\r\n                } else if (value !== this.form.password) {\r\n                    callback(new Error(\"两次输入密码不一致!\"));\r\n                } else {\r\n                    callback();\r\n                }\r\n        };\r\n        return {\r\n            showpassword: true,\r\n            \r\n            form: {\r\n                username: \"\",\r\n                password: \"\",\r\n                password2: \"\",\r\n                name:\"\",\r\n                gender:\"\",\r\n                age:\"\",\r\n                phoneNum:\"\",\r\n                email:\"\",\r\n                avatar:\"\"\r\n            },\r\n            rules: {\r\n                username: [\r\n                    {required: true, message: \"请输入账号\", trigger: \"blur\"},\r\n                    {\r\n                        pattern: /^[a-zA-Z0-9]{4,9}$/,\r\n                        message: \"必须由 4 到 9 个字母或数字组成\",\r\n                        trigger: \"blur\",\r\n                    },\r\n                ],\r\n                name: [\r\n                    {required: true, message: \"请输入姓名\", trigger: \"blur\"},\r\n                    {\r\n                        pattern: /^(?:[\\u4E00-\\u9FA5·]{2,10})$/,\r\n                        message: \"必须由 2 到 10 个汉字组成\",\r\n                        trigger: \"blur\",\r\n                    },\r\n                ],\r\n                gender: [{required: true, message: \"请选择性别\", trigger: \"change\"}],\r\n                age: [\r\n                    {required: true, message: \"请输入年龄\", trigger: \"blur\"},\r\n                    {type: \"number\", message: \"年龄必须为数字值\", trigger: \"blur\"},\r\n                    {\r\n                        pattern: /^([1-9]){1,2}$/,\r\n                        message: \"范围：1-100\",\r\n                        trigger: \"blur\",\r\n                    },\r\n                ],\r\n                phoneNum: [{required: true, validator: checkPhone, trigger: \"blur\"}],\r\n                email: [\r\n                    {type: \"email\", message: \"请输入正确的邮箱地址\", trigger: \"blur\"},\r\n                ],\r\n                password: [\r\n                    {required: true, message: \"请输入密码\", trigger: \"blur\"},\r\n                    {\r\n                        min: 6,\r\n                        max: 32,\r\n                        message: \"长度在 6 到 16 个字符\",\r\n                        trigger: \"blur\",\r\n                    },\r\n                ],\r\n                password2: [{validator: password2, trigger: \"blur\"}],\r\n                \r\n            },\r\n        };\r\n    },\r\n    computed: {\r\n        disabled() {\r\n            const {username, password,name,gender,age,phoneNum,email} = this.form;\r\n            return Boolean(username && password && name && gender && age && phoneNum && email);\r\n        },\r\n    },\r\n    methods: {\r\n        register() {\r\n            this.$refs.form.validate((valid) => {\r\n                if (valid) {\r\n                    request.post(\"/regist\", this.form).then((res) => {\r\n                        if (res.code === 200){\r\n                            ElMessage({\r\n                                message: \"注册成功\",\r\n                                type: \"success\",\r\n                        });\r\n                           //注册成功跳转主页\r\n                            \r\n                            window.sessionStorage.setItem(\"user\", JSON.stringify(res.data));\r\n                            window.sessionStorage.setItem(\"identity\", JSON.stringify(\"user\"));\r\n                            console.log(sessionStorage.getItem(\"identity\"))\r\n                            this.$router.replace({path: \"/home\"});\r\n                        } else {\r\n                            ElMessage({\r\n                                message: res.message,\r\n                                type: \"error\",\r\n                            });\r\n                        }\r\n                    });\r\n                }else{\r\n                    alert(\"输入信息有误\")\r\n                }\r\n            });\r\n        },\r\n        \r\n        async uploadSuccess() {\r\n            await request.post(\"/files/uploadAvatar\", this.form.avatar).then((res) => {\r\n                if (res.code === \"0\") {\r\n                    ElMessage({\r\n                        message: \"上传成功\",\r\n                        type: \"success\",\r\n                    });\r\n                    //获取头像文件名\r\n                    this.form.avatar = res.data;\r\n                    console.log(\"上传成功：\" + this.avatar);\r\n                    \r\n                } else {\r\n                    ElMessage({\r\n                        message: res.msg,\r\n                        type: \"error\",\r\n                    });\r\n                }\r\n            });\r\n        },\r\n        \r\n    },\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}