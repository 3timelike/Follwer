{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar vue = require('vue');\nrequire('../../components/config-provider/index.js');\nrequire('../../utils/index.js');\nvar runtime = require('../../utils/vue/props/runtime.js');\nvar shared = require('@vue/shared');\nvar useGlobalConfig = require('../../components/config-provider/src/hooks/use-global-config.js');\nvar error = require('../../utils/error.js');\nconst SCOPE = \"use-empty-values\";\nconst DEFAULT_EMPTY_VALUES = [\"\", void 0, null];\nconst DEFAULT_VALUE_ON_CLEAR = void 0;\nconst useEmptyValuesProps = runtime.buildProps({\n  emptyValues: Array,\n  valueOnClear: {\n    type: [String, Number, Boolean, Function],\n    default: void 0,\n    validator: val => shared.isFunction(val) ? !val() : !val\n  }\n});\nconst useEmptyValues = (props, defaultValue) => {\n  let config = useGlobalConfig.useGlobalConfig();\n  if (!config.value) {\n    config = vue.ref({});\n  }\n  const emptyValues = vue.computed(() => props.emptyValues || config.value.emptyValues || DEFAULT_EMPTY_VALUES);\n  const valueOnClear = vue.computed(() => {\n    if (shared.isFunction(props.valueOnClear)) {\n      return props.valueOnClear();\n    } else if (props.valueOnClear !== void 0) {\n      return props.valueOnClear;\n    } else if (shared.isFunction(config.value.valueOnClear)) {\n      return config.value.valueOnClear();\n    } else if (config.value.valueOnClear !== void 0) {\n      return config.value.valueOnClear;\n    }\n    return defaultValue !== void 0 ? defaultValue : DEFAULT_VALUE_ON_CLEAR;\n  });\n  const isEmptyValue = value => {\n    return emptyValues.value.includes(value);\n  };\n  if (!emptyValues.value.includes(valueOnClear.value)) {\n    error.debugWarn(SCOPE, \"value-on-clear should be a value of empty-values\");\n  }\n  return {\n    emptyValues,\n    valueOnClear,\n    isEmptyValue\n  };\n};\nexports.DEFAULT_EMPTY_VALUES = DEFAULT_EMPTY_VALUES;\nexports.DEFAULT_VALUE_ON_CLEAR = DEFAULT_VALUE_ON_CLEAR;\nexports.SCOPE = SCOPE;\nexports.useEmptyValues = useEmptyValues;\nexports.useEmptyValuesProps = useEmptyValuesProps;","map":{"version":3,"names":["SCOPE","DEFAULT_EMPTY_VALUES","DEFAULT_VALUE_ON_CLEAR","useEmptyValuesProps","runtime","buildProps","emptyValues","Array","valueOnClear","type","String","Number","Boolean","Function","default","validator","val","shared","isFunction","useEmptyValues","props","defaultValue","config","useGlobalConfig","value","vue","ref","computed","isEmptyValue","includes","error","debugWarn"],"sources":["../../../../../packages/hooks/use-empty-values/index.ts"],"sourcesContent":["import { computed, ref } from 'vue'\nimport { useGlobalConfig } from '@element-plus/components/config-provider'\nimport { buildProps, debugWarn, isFunction } from '@element-plus/utils'\n\nimport type { ExtractPropTypes } from 'vue'\n\nexport const SCOPE = 'use-empty-values'\nexport const DEFAULT_EMPTY_VALUES = ['', undefined, null]\nexport const DEFAULT_VALUE_ON_CLEAR = undefined\n\nexport const useEmptyValuesProps = buildProps({\n  /**\n   * @description empty values supported by the component\n   */\n  emptyValues: Array,\n  /**\n   * @description return value when cleared, if you want to set `undefined`, use `() => undefined`\n   */\n  valueOnClear: {\n    type: [String, Number, Boolean, Function],\n    default: undefined,\n    validator: (val: any) => (isFunction(val) ? !val() : !val),\n  },\n} as const)\n\nexport const useEmptyValues = (\n  props: ExtractPropTypes<typeof useEmptyValuesProps>,\n  defaultValue?: null | undefined\n) => {\n  let config = useGlobalConfig()\n  if (!config.value) {\n    config = ref({})\n  }\n\n  const emptyValues = computed(\n    () => props.emptyValues || config.value.emptyValues || DEFAULT_EMPTY_VALUES\n  )\n\n  const valueOnClear = computed(() => {\n    // function is used for undefined cause undefined can't be a value of prop\n    if (isFunction(props.valueOnClear)) {\n      return props.valueOnClear()\n    } else if (props.valueOnClear !== undefined) {\n      return props.valueOnClear\n    } else if (isFunction(config.value.valueOnClear)) {\n      return config.value.valueOnClear()\n    } else if (config.value.valueOnClear !== undefined) {\n      return config.value.valueOnClear\n    }\n    return defaultValue !== undefined ? defaultValue : DEFAULT_VALUE_ON_CLEAR\n  })\n\n  const isEmptyValue = (value: any) => {\n    return emptyValues.value.includes(value)\n  }\n\n  if (!emptyValues.value.includes(valueOnClear.value)) {\n    debugWarn(SCOPE, 'value-on-clear should be a value of empty-values')\n  }\n\n  return {\n    emptyValues,\n    valueOnClear,\n    isEmptyValue,\n  }\n}\n"],"mappings":";;;;;;;;;;;;AAGY,MAACA,KAAK,GAAG;AACT,MAACC,oBAAoB,GAAG,CAAC,EAAE,EAAE,KAAK,CAAC,EAAE,IAAI;AACzC,MAACC,sBAAsB,GAAG,KAAK;AAC/B,MAACC,mBAAmB,GAAGC,OAAA,CAAAC,UAAU,CAAC;EAC5CC,WAAW,EAAEC,KAAK;EAClBC,YAAY,EAAE;IACZC,IAAI,EAAE,CAACC,MAAM,EAAEC,MAAM,EAAEC,OAAO,EAAEC,QAAQ,CAAC;IACzCC,OAAO,EAAE,KAAK,CAAC;IACfC,SAAS,EAAGC,GAAG,IAAKC,MAAA,CAAAC,UAAU,CAACF,GAAG,CAAC,GAAG,CAACA,GAAG,EAAE,GAAG,CAACA;EACpD;AACA,CAAC;AACW,MAACG,cAAc,GAAGA,CAACC,KAAK,EAAEC,YAAY,KAAK;EACrD,IAAIC,MAAM,GAAGC,eAAA,CAAAA,eAAe,EAAE;EAC9B,IAAI,CAACD,MAAM,CAACE,KAAK,EAAE;IACjBF,MAAM,GAAGG,GAAA,CAAAC,GAAG,CAAC,EAAE,CAAC;EACpB;EACE,MAAMpB,WAAW,GAAGmB,GAAA,CAAAE,QAAQ,CAAC,MAAMP,KAAK,CAACd,WAAW,IAAIgB,MAAM,CAACE,KAAK,CAAClB,WAAW,IAAIL,oBAAoB,CAAC;EACzG,MAAMO,YAAY,GAAGiB,GAAA,CAAAE,QAAQ,CAAC,MAAM;IAClC,IAAIV,MAAA,CAAAC,UAAU,CAACE,KAAK,CAACZ,YAAY,CAAC,EAAE;MAClC,OAAOY,KAAK,CAACZ,YAAY,EAAE;IACjC,CAAK,MAAM,IAAIY,KAAK,CAACZ,YAAY,KAAK,KAAK,CAAC,EAAE;MACxC,OAAOY,KAAK,CAACZ,YAAY;IAC/B,CAAK,MAAM,IAAIS,MAAA,CAAAC,UAAU,CAACI,MAAM,CAACE,KAAK,CAAChB,YAAY,CAAC,EAAE;MAChD,OAAOc,MAAM,CAACE,KAAK,CAAChB,YAAY,EAAE;IACxC,CAAK,MAAM,IAAIc,MAAM,CAACE,KAAK,CAAChB,YAAY,KAAK,KAAK,CAAC,EAAE;MAC/C,OAAOc,MAAM,CAACE,KAAK,CAAChB,YAAY;IACtC;IACI,OAAOa,YAAY,KAAK,KAAK,CAAC,GAAGA,YAAY,GAAGnB,sBAAsB;EAC1E,CAAG,CAAC;EACF,MAAM0B,YAAY,GAAIJ,KAAK,IAAK;IAC9B,OAAOlB,WAAW,CAACkB,KAAK,CAACK,QAAQ,CAACL,KAAK,CAAC;EAC5C,CAAG;EACD,IAAI,CAAClB,WAAW,CAACkB,KAAK,CAACK,QAAQ,CAACrB,YAAY,CAACgB,KAAK,CAAC,EAAE;IACnDM,KAAA,CAAAC,SAAS,CAAC/B,KAAK,EAAE,kDAAkD,CAAC;EACxE;EACE,OAAO;IACLM,WAAW;IACXE,YAAY;IACZoB;EACJ,CAAG;AACH","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}