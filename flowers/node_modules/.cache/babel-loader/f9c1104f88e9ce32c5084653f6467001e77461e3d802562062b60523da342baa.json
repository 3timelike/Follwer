{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar vue = require('vue');\nvar lodashUnified = require('lodash-unified');\nvar index$2 = require('../../button/index.js');\nvar index$1 = require('../../icon/index.js');\nrequire('../../../utils/index.js');\nrequire('../../../hooks/index.js');\nvar step = require('./step.js');\nvar helper = require('./helper.js');\nvar pluginVue_exportHelper = require('../../../_virtual/plugin-vue_export-helper.js');\nvar icon = require('../../../utils/vue/icon.js');\nvar index = require('../../../hooks/use-locale/index.js');\nconst __default__ = vue.defineComponent({\n  name: \"ElTourStep\"\n});\nconst _sfc_main = /* @__PURE__ */vue.defineComponent({\n  ...__default__,\n  props: step.tourStepProps,\n  emits: step.tourStepEmits,\n  setup(__props, {\n    emit\n  }) {\n    const props = __props;\n    const {\n      Close\n    } = icon.CloseComponents;\n    const {\n      t\n    } = index.useLocale();\n    const {\n      currentStep,\n      current,\n      total,\n      showClose,\n      closeIcon,\n      mergedType,\n      ns,\n      slots: tourSlots,\n      updateModelValue,\n      onClose: tourOnClose,\n      onFinish: tourOnFinish,\n      onChange\n    } = vue.inject(helper.tourKey);\n    vue.watch(props, val => {\n      currentStep.value = val;\n    }, {\n      immediate: true\n    });\n    const mergedShowClose = vue.computed(() => {\n      var _a;\n      return (_a = props.showClose) != null ? _a : showClose.value;\n    });\n    const mergedCloseIcon = vue.computed(() => {\n      var _a, _b;\n      return (_b = (_a = props.closeIcon) != null ? _a : closeIcon.value) != null ? _b : Close;\n    });\n    const filterButtonProps = btnProps => {\n      if (!btnProps) return;\n      return lodashUnified.omit(btnProps, [\"children\", \"onClick\"]);\n    };\n    const onPrev = () => {\n      var _a, _b;\n      current.value -= 1;\n      if ((_a = props.prevButtonProps) == null ? void 0 : _a.onClick) {\n        (_b = props.prevButtonProps) == null ? void 0 : _b.onClick();\n      }\n      onChange();\n    };\n    const onNext = () => {\n      var _a;\n      if (current.value >= total.value - 1) {\n        onFinish();\n      } else {\n        current.value += 1;\n      }\n      if ((_a = props.nextButtonProps) == null ? void 0 : _a.onClick) {\n        props.nextButtonProps.onClick();\n      }\n      onChange();\n    };\n    const onFinish = () => {\n      onClose();\n      tourOnFinish();\n    };\n    const onClose = () => {\n      updateModelValue(false);\n      tourOnClose();\n      emit(\"close\");\n    };\n    return (_ctx, _cache) => {\n      return vue.openBlock(), vue.createElementBlock(vue.Fragment, null, [vue.unref(mergedShowClose) ? (vue.openBlock(), vue.createElementBlock(\"button\", {\n        key: 0,\n        \"aria-label\": \"Close\",\n        class: vue.normalizeClass(vue.unref(ns).e(\"closebtn\")),\n        type: \"button\",\n        onClick: onClose\n      }, [vue.createVNode(vue.unref(index$1.ElIcon), {\n        class: vue.normalizeClass(vue.unref(ns).e(\"close\"))\n      }, {\n        default: vue.withCtx(() => [(vue.openBlock(), vue.createBlock(vue.resolveDynamicComponent(vue.unref(mergedCloseIcon))))]),\n        _: 1\n      }, 8, [\"class\"])], 2)) : vue.createCommentVNode(\"v-if\", true), vue.createElementVNode(\"header\", {\n        class: vue.normalizeClass([vue.unref(ns).e(\"header\"), {\n          \"show-close\": vue.unref(showClose)\n        }])\n      }, [vue.renderSlot(_ctx.$slots, \"header\", {}, () => [vue.createElementVNode(\"span\", {\n        role: \"heading\",\n        class: vue.normalizeClass(vue.unref(ns).e(\"title\"))\n      }, vue.toDisplayString(_ctx.title), 3)])], 2), vue.createElementVNode(\"div\", {\n        class: vue.normalizeClass(vue.unref(ns).e(\"body\"))\n      }, [vue.renderSlot(_ctx.$slots, \"default\", {}, () => [vue.createElementVNode(\"span\", null, vue.toDisplayString(_ctx.description), 1)])], 2), vue.createElementVNode(\"footer\", {\n        class: vue.normalizeClass(vue.unref(ns).e(\"footer\"))\n      }, [vue.createElementVNode(\"div\", {\n        class: vue.normalizeClass(vue.unref(ns).b(\"indicators\"))\n      }, [vue.unref(tourSlots).indicators ? (vue.openBlock(), vue.createBlock(vue.resolveDynamicComponent(vue.unref(tourSlots).indicators), {\n        key: 0,\n        current: vue.unref(current),\n        total: vue.unref(total)\n      }, null, 8, [\"current\", \"total\"])) : (vue.openBlock(true), vue.createElementBlock(vue.Fragment, {\n        key: 1\n      }, vue.renderList(vue.unref(total), (item, index) => {\n        return vue.openBlock(), vue.createElementBlock(\"span\", {\n          key: item,\n          class: vue.normalizeClass([vue.unref(ns).b(\"indicator\"), index === vue.unref(current) ? \"is-active\" : \"\"])\n        }, null, 2);\n      }), 128))], 2), vue.createElementVNode(\"div\", {\n        class: vue.normalizeClass(vue.unref(ns).b(\"buttons\"))\n      }, [vue.unref(current) > 0 ? (vue.openBlock(), vue.createBlock(vue.unref(index$2.ElButton), vue.mergeProps({\n        key: 0,\n        size: \"small\",\n        type: vue.unref(mergedType)\n      }, filterButtonProps(_ctx.prevButtonProps), {\n        onClick: onPrev\n      }), {\n        default: vue.withCtx(() => {\n          var _a, _b;\n          return [vue.createTextVNode(vue.toDisplayString((_b = (_a = _ctx.prevButtonProps) == null ? void 0 : _a.children) != null ? _b : vue.unref(t)(\"el.tour.previous\")), 1)];\n        }),\n        _: 1\n      }, 16, [\"type\"])) : vue.createCommentVNode(\"v-if\", true), vue.unref(current) <= vue.unref(total) - 1 ? (vue.openBlock(), vue.createBlock(vue.unref(index$2.ElButton), vue.mergeProps({\n        key: 1,\n        size: \"small\",\n        type: vue.unref(mergedType) === \"primary\" ? \"default\" : \"primary\"\n      }, filterButtonProps(_ctx.nextButtonProps), {\n        onClick: onNext\n      }), {\n        default: vue.withCtx(() => {\n          var _a, _b;\n          return [vue.createTextVNode(vue.toDisplayString((_b = (_a = _ctx.nextButtonProps) == null ? void 0 : _a.children) != null ? _b : vue.unref(current) === vue.unref(total) - 1 ? vue.unref(t)(\"el.tour.finish\") : vue.unref(t)(\"el.tour.next\")), 1)];\n        }),\n        _: 1\n      }, 16, [\"type\"])) : vue.createCommentVNode(\"v-if\", true)], 2)], 2)], 64);\n    };\n  }\n});\nvar TourStep = /* @__PURE__ */pluginVue_exportHelper[\"default\"](_sfc_main, [[\"__file\", \"step.vue\"]]);\nexports[\"default\"] = TourStep;","map":{"version":3,"names":["name","Close","icon","CloseComponents","t","index","useLocale","currentStep","current","total","showClose","closeIcon","mergedType","ns","slots","tourSlots","updateModelValue","onClose","tourOnClose","onFinish","tourOnFinish","onChange","vue","inject","helper","tourKey","watch","props","val","value","immediate","mergedShowClose","computed","_a","mergedCloseIcon","_b","filterButtonProps","btnProps","lodashUnified","omit","onPrev","prevButtonProps","onClick","onNext","nextButtonProps"],"sources":["../../../../../../packages/components/tour/src/step.vue"],"sourcesContent":["<template>\n  <button\n    v-if=\"mergedShowClose\"\n    aria-label=\"Close\"\n    :class=\"ns.e('closebtn')\"\n    type=\"button\"\n    @click=\"onClose\"\n  >\n    <el-icon :class=\"ns.e('close')\">\n      <component :is=\"mergedCloseIcon\" />\n    </el-icon>\n  </button>\n  <header :class=\"[ns.e('header'), { 'show-close': showClose }]\">\n    <slot name=\"header\">\n      <span role=\"heading\" :class=\"ns.e('title')\">\n        {{ title }}\n      </span>\n    </slot>\n  </header>\n  <div :class=\"ns.e('body')\">\n    <slot>\n      <span>{{ description }}</span>\n    </slot>\n  </div>\n  <footer :class=\"ns.e('footer')\">\n    <div :class=\"ns.b('indicators')\">\n      <component\n        :is=\"tourSlots.indicators\"\n        v-if=\"tourSlots.indicators\"\n        :current=\"current\"\n        :total=\"total\"\n      />\n      <template v-else>\n        <span\n          v-for=\"(item, index) in total\"\n          :key=\"item\"\n          :class=\"[ns.b('indicator'), index === current ? 'is-active' : '']\"\n        />\n      </template>\n    </div>\n    <div :class=\"ns.b('buttons')\">\n      <el-button\n        v-if=\"current > 0\"\n        size=\"small\"\n        :type=\"mergedType\"\n        v-bind=\"filterButtonProps(prevButtonProps)\"\n        @click=\"onPrev\"\n      >\n        {{ prevButtonProps?.children ?? t('el.tour.previous') }}\n      </el-button>\n      <el-button\n        v-if=\"current <= total - 1\"\n        size=\"small\"\n        :type=\"mergedType === 'primary' ? 'default' : 'primary'\"\n        v-bind=\"filterButtonProps(nextButtonProps)\"\n        @click=\"onNext\"\n      >\n        {{\n          nextButtonProps?.children ??\n          (current === total - 1 ? t('el.tour.finish') : t('el.tour.next'))\n        }}\n      </el-button>\n    </div>\n  </footer>\n</template>\n\n<script lang=\"ts\" setup>\nimport { computed, inject, watch } from 'vue'\nimport { omit } from 'lodash-unified'\nimport { ElButton } from '@element-plus/components/button'\nimport { ElIcon } from '@element-plus/components/icon'\nimport { CloseComponents } from '@element-plus/utils'\nimport { useLocale } from '@element-plus/hooks'\nimport { tourStepEmits, tourStepProps } from './step'\nimport { tourKey } from './helper'\n\nimport type { TourBtnProps } from './types'\n\ndefineOptions({\n  name: 'ElTourStep',\n})\n\nconst props = defineProps(tourStepProps)\nconst emit = defineEmits(tourStepEmits)\n\nconst { Close } = CloseComponents\n\nconst { t } = useLocale()\n\nconst {\n  currentStep,\n  current,\n  total,\n  showClose,\n  closeIcon,\n  mergedType,\n  ns,\n  slots: tourSlots,\n  updateModelValue,\n  onClose: tourOnClose,\n  onFinish: tourOnFinish,\n  onChange,\n} = inject(tourKey)!\n\nwatch(\n  props,\n  (val) => {\n    currentStep.value = val\n  },\n  {\n    immediate: true,\n  }\n)\n\nconst mergedShowClose = computed(() => props.showClose ?? showClose.value)\nconst mergedCloseIcon = computed(\n  () => props.closeIcon ?? closeIcon.value ?? Close\n)\n\nconst filterButtonProps = (btnProps?: TourBtnProps) => {\n  if (!btnProps) return\n  return omit(btnProps, ['children', 'onClick'])\n}\n\nconst onPrev = () => {\n  current.value -= 1\n  if (props.prevButtonProps?.onClick) {\n    props.prevButtonProps?.onClick()\n  }\n  onChange()\n}\n\nconst onNext = () => {\n  if (current.value >= total.value - 1) {\n    onFinish()\n  } else {\n    current.value += 1\n  }\n  if (props.nextButtonProps?.onClick) {\n    props.nextButtonProps.onClick()\n  }\n  onChange()\n}\n\nconst onFinish = () => {\n  onClose()\n  tourOnFinish()\n}\n\nconst onClose = () => {\n  updateModelValue(false)\n  tourOnClose()\n  emit('close')\n}\n</script>\n"],"mappings":";;;;;;;;;;;;;;;;uCA8Ec;EACZA,IAAM;AACR;;;;;;;;;IAKA,MAAM;MAAEC;IAAU,IAAAC,IAAA,CAAAC,eAAA;IAEZ;MAAEC;IAAA,IAAMC,KAAA,CAAAC,SAAU;IAElB;MACJC,WAAA;MACAC,OAAA;MACAC,KAAA;MACAC,SAAA;MACAC,SAAA;MACAC,UAAA;MACAC,EAAA;MACAC,KAAO,EAAAC,SAAA;MACPC,gBAAA;MACAC,OAAS,EAAAC,WAAA;MACTC,QAAU,EAAAC,YAAA;MACVC;IAAA,IACEC,GAAA,CAAAC,MAAA,CAAOC,MAAA,CAAAC,OAAO;IAGhBH,GAAA,CAAAI,KAAA,CAAAC,KAAA,EACCC,GAAQ;MACPrB,WAAA,CAAYsB,KAAQ,GAAAD,GAAA;IAAA,CAEtB;MACEE,SAAW;IAAA,CAEf;IAEA,MAAMC,eAAA,GAAkBT,GAAA,CAAAU,QAAS,OAAM;MACvC,IAAMC,EAAA;MAIA,QAAAA,EAAA,GAAAN,KAAA,CAAAjB,SAAiD,YAAAuB,EAAA,GAAAvB,SAAA,CAAAmB,KAAA;IACrD;IAAe,MAAAK,eAAA,GAAAZ,GAAA,CAAAU,QAAA;MACf,IAAAC,EAAA,EAAYE,EAAA;MACd,QAAAA,EAAA,IAAAF,EAAA,GAAAN,KAAA,CAAAhB,SAAA,YAAAsB,EAAA,GAAAtB,SAAA,CAAAkB,KAAA,YAAAM,EAAA,GAAAlC,KAAA;IAEA;IACE,MAAAmC,iBAAiB,GAAAC,QAAA;MACb,KAAAA,QAAA,EACF;MACF,OAAAC,aAAA,CAAAC,IAAA,CAAAF,QAAA;IACA,CAAS;IACX,MAAAG,MAAA,GAAAA,CAAA;MAEA,IAAMP,EAAA,EAAAE,EAAA;MACJ3B,OAAY,CAAAqB,KAAA;MACD,KAAAI,EAAA,GAAAN,KAAA,CAAAc,eAAA,qBAAAR,EAAA,CAAAS,OAAA;QACJ,CAAAP,EAAA,GAAAR,KAAA,CAAAc,eAAA,qBAAAN,EAAA,CAAAO,OAAA;MACL;MACFrB,QAAA;IACA,CAAI;IACF,MAAAsB,MAAA,GAAAA,CAAA;MACF,IAAAV,EAAA;MACS,IAAAzB,OAAA,CAAAqB,KAAA,IAAApB,KAAA,CAAAoB,KAAA;QACXV,QAAA;MAEA;QACUX,OAAA,CAAAqB,KAAA;MACR;MACF,KAAAI,EAAA,GAAAN,KAAA,CAAAiB,eAAA,qBAAAX,EAAA,CAAAS,OAAA;QAEAf,KAAA,CAAAiB,eAAsB,CAAAF,OAAA;MACpB;MACYrB,QAAA;IACZ;IACF,MAAAF,QAAA,GAAAA,CAAA","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}