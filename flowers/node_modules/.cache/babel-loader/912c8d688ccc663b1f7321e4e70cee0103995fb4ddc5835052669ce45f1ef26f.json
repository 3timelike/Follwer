{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nrequire('../../../utils/index.js');\nrequire('../../../hooks/index.js');\nvar radio = require('./radio.js');\nvar runtime = require('../../../utils/vue/props/runtime.js');\nvar index = require('../../../hooks/use-size/index.js');\nvar index$1 = require('../../../hooks/use-aria/index.js');\nconst radioGroupProps = runtime.buildProps({\n  id: {\n    type: String,\n    default: void 0\n  },\n  size: index.useSizeProp,\n  disabled: Boolean,\n  modelValue: {\n    type: [String, Number, Boolean],\n    default: void 0\n  },\n  fill: {\n    type: String,\n    default: \"\"\n  },\n  label: {\n    type: String,\n    default: void 0\n  },\n  textColor: {\n    type: String,\n    default: \"\"\n  },\n  name: {\n    type: String,\n    default: void 0\n  },\n  validateEvent: {\n    type: Boolean,\n    default: true\n  },\n  ...index$1.useAriaProps([\"ariaLabel\"])\n});\nconst radioGroupEmits = radio.radioEmits;\nexports.radioGroupEmits = radioGroupEmits;\nexports.radioGroupProps = radioGroupProps;","map":{"version":3,"names":["radioGroupProps","runtime","buildProps","id","type","String","default","size","index","useSizeProp","disabled","Boolean","modelValue","Number","fill","label","textColor","name","validateEvent","index$1","useAriaProps","radioGroupEmits","radio","radioEmits"],"sources":["../../../../../../packages/components/radio/src/radio-group.ts"],"sourcesContent":["import { buildProps } from '@element-plus/utils'\nimport { useAriaProps, useSizeProp } from '@element-plus/hooks'\nimport { radioEmits } from './radio'\nimport type { ExtractPropTypes } from '@vue/runtime-core'\nimport type RadioGroup from './radio-group.vue'\n\nexport const radioGroupProps = buildProps({\n  /**\n   * @description native `id` attribute\n   */\n  id: {\n    type: String,\n    default: undefined,\n  },\n  /**\n   * @description the size of radio buttons or bordered radios\n   */\n  size: useSizeProp,\n  /**\n   * @description whether the nesting radios are disabled\n   */\n  disabled: Boolean,\n  /**\n   * @description binding value\n   */\n  modelValue: {\n    type: [String, Number, Boolean],\n    default: undefined,\n  },\n  /**\n   * @description border and background color when button is active\n   */\n  fill: {\n    type: String,\n    default: '',\n  },\n  /**\n   * @deprecated same as `aria-label` in RadioGroup\n   */\n  label: {\n    type: String,\n    default: undefined,\n  },\n  /**\n   * @description font color when button is active\n   */\n  textColor: {\n    type: String,\n    default: '',\n  },\n  /**\n   * @description native `name` attribute\n   */\n  name: {\n    type: String,\n    default: undefined,\n  },\n  /**\n   * @description whether to trigger form validation\n   */\n  validateEvent: {\n    type: Boolean,\n    default: true,\n  },\n  ...useAriaProps(['ariaLabel']),\n} as const)\nexport type RadioGroupProps = ExtractPropTypes<typeof radioGroupProps>\n\nexport const radioGroupEmits = radioEmits\nexport type RadioGroupEmits = typeof radioGroupEmits\nexport type RadioGroupInstance = InstanceType<typeof RadioGroup>\n"],"mappings":";;;;;;;;;;;AAGY,MAACA,eAAe,GAAGC,OAAA,CAAAC,UAAU,CAAC;EACxCC,EAAE,EAAE;IACFC,IAAI,EAAEC,MAAM;IACZC,OAAO,EAAE,KAAK;EAClB,CAAG;EACDC,IAAI,EAAEC,KAAA,CAAAC,WAAW;EACjBC,QAAQ,EAAEC,OAAO;EACjBC,UAAU,EAAE;IACVR,IAAI,EAAE,CAACC,MAAM,EAAEQ,MAAM,EAAEF,OAAO,CAAC;IAC/BL,OAAO,EAAE,KAAK;EAClB,CAAG;EACDQ,IAAI,EAAE;IACJV,IAAI,EAAEC,MAAM;IACZC,OAAO,EAAE;EACb,CAAG;EACDS,KAAK,EAAE;IACLX,IAAI,EAAEC,MAAM;IACZC,OAAO,EAAE,KAAK;EAClB,CAAG;EACDU,SAAS,EAAE;IACTZ,IAAI,EAAEC,MAAM;IACZC,OAAO,EAAE;EACb,CAAG;EACDW,IAAI,EAAE;IACJb,IAAI,EAAEC,MAAM;IACZC,OAAO,EAAE,KAAK;EAClB,CAAG;EACDY,aAAa,EAAE;IACbd,IAAI,EAAEO,OAAO;IACbL,OAAO,EAAE;EACb,CAAG;EACD,GAAGa,OAAA,CAAAC,YAAY,CAAC,CAAC,WAAW,CAAC;AAC/B,CAAC;AACW,MAACC,eAAe,GAAGC,KAAA,CAAAC,UAAA","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}