{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar core = require('@popperjs/core');\nrequire('../../../hooks/index.js');\nrequire('../../../utils/index.js');\nrequire('../../tooltip/index.js');\nvar iconsVue = require('@element-plus/icons-vue');\nrequire('../../tag/index.js');\nvar useProps = require('./useProps.js');\nvar runtime = require('../../../utils/vue/props/runtime.js');\nvar icon = require('../../../utils/vue/icon.js');\nvar content = require('../../tooltip/src/content.js');\nvar index = require('../../../hooks/use-size/index.js');\nvar tag = require('../../tag/src/tag.js');\nvar index$1 = require('../../../hooks/use-empty-values/index.js');\nvar index$2 = require('../../../hooks/use-aria/index.js');\nconst SelectProps = runtime.buildProps({\n  allowCreate: Boolean,\n  autocomplete: {\n    type: runtime.definePropType(String),\n    default: \"none\"\n  },\n  automaticDropdown: Boolean,\n  clearable: Boolean,\n  clearIcon: {\n    type: icon.iconPropType,\n    default: iconsVue.CircleClose\n  },\n  effect: {\n    type: runtime.definePropType(String),\n    default: \"light\"\n  },\n  collapseTags: Boolean,\n  collapseTagsTooltip: Boolean,\n  maxCollapseTags: {\n    type: Number,\n    default: 1\n  },\n  defaultFirstOption: Boolean,\n  disabled: Boolean,\n  estimatedOptionHeight: {\n    type: Number,\n    default: void 0\n  },\n  filterable: Boolean,\n  filterMethod: Function,\n  height: {\n    type: Number,\n    default: 274\n  },\n  itemHeight: {\n    type: Number,\n    default: 34\n  },\n  id: String,\n  loading: Boolean,\n  loadingText: String,\n  modelValue: {\n    type: runtime.definePropType([Array, String, Number, Boolean, Object])\n  },\n  multiple: Boolean,\n  multipleLimit: {\n    type: Number,\n    default: 0\n  },\n  name: String,\n  noDataText: String,\n  noMatchText: String,\n  remoteMethod: Function,\n  reserveKeyword: {\n    type: Boolean,\n    default: true\n  },\n  options: {\n    type: runtime.definePropType(Array),\n    required: true\n  },\n  placeholder: {\n    type: String\n  },\n  teleported: content.useTooltipContentProps.teleported,\n  persistent: {\n    type: Boolean,\n    default: true\n  },\n  popperClass: {\n    type: String,\n    default: \"\"\n  },\n  popperOptions: {\n    type: runtime.definePropType(Object),\n    default: () => ({})\n  },\n  remote: Boolean,\n  size: index.useSizeProp,\n  props: {\n    type: runtime.definePropType(Object),\n    default: () => useProps.defaultProps\n  },\n  valueKey: {\n    type: String,\n    default: \"value\"\n  },\n  scrollbarAlwaysOn: Boolean,\n  validateEvent: {\n    type: Boolean,\n    default: true\n  },\n  placement: {\n    type: runtime.definePropType(String),\n    values: core.placements,\n    default: \"bottom-start\"\n  },\n  fallbackPlacements: {\n    type: runtime.definePropType(Array),\n    default: [\"bottom-start\", \"top-start\", \"right\", \"left\"]\n  },\n  tagType: {\n    ...tag.tagProps.type,\n    default: \"info\"\n  },\n  ...index$1.useEmptyValuesProps,\n  ...index$2.useAriaProps([\"ariaLabel\"])\n});\nconst OptionProps = runtime.buildProps({\n  data: Array,\n  disabled: Boolean,\n  hovering: Boolean,\n  item: {\n    type: runtime.definePropType(Object),\n    required: true\n  },\n  index: Number,\n  style: Object,\n  selected: Boolean,\n  created: Boolean\n});\nexports.OptionProps = OptionProps;\nexports.SelectProps = SelectProps;","map":{"version":3,"names":["SelectProps","runtime","buildProps","allowCreate","Boolean","autocomplete","type","definePropType","String","default","automaticDropdown","clearable","clearIcon","icon","iconPropType","iconsVue","CircleClose","effect","collapseTags","collapseTagsTooltip","maxCollapseTags","Number","defaultFirstOption","disabled","estimatedOptionHeight","filterable","filterMethod","Function","height","itemHeight","id","loading","loadingText","modelValue","Array","Object","multiple","multipleLimit","name","noDataText","noMatchText","remoteMethod","reserveKeyword","options","required","placeholder","teleported","content","useTooltipContentProps","persistent","popperClass","popperOptions","remote","size","index","useSizeProp","props","useProps","defaultProps","valueKey","scrollbarAlwaysOn","validateEvent","placement","values","core","placements","fallbackPlacements","tagType","tag","tagProps","index$1","useEmptyValuesProps","index$2","useAriaProps","OptionProps","data","hovering","item","style","selected","created"],"sources":["../../../../../../packages/components/select-v2/src/defaults.ts"],"sourcesContent":["import { placements } from '@popperjs/core'\nimport {\n  useAriaProps,\n  useEmptyValuesProps,\n  useSizeProp,\n} from '@element-plus/hooks'\nimport { buildProps, definePropType, iconPropType } from '@element-plus/utils'\nimport { useTooltipContentProps } from '@element-plus/components/tooltip'\nimport { CircleClose } from '@element-plus/icons-vue'\nimport { tagProps } from '../../tag'\nimport { defaultProps } from './useProps'\n\nimport type { Option, OptionType } from './select.types'\nimport type { Props } from './useProps'\nimport type { Options, Placement } from '@element-plus/components/popper'\n\nexport const SelectProps = buildProps({\n  /**\n   * @description whether creating new items is allowed. To use this, `filterable` must be true\n   */\n  allowCreate: Boolean,\n  /**\n   * @description autocomplete of select input\n   */\n  autocomplete: {\n    type: definePropType<'none' | 'both' | 'list' | 'inline'>(String),\n    default: 'none',\n  },\n  /**\n   * @description for non-filterable Select, this prop decides if the option menu pops up when the input is focused\n   */\n  automaticDropdown: Boolean,\n  /**\n   * @description whether select can be cleared\n   */\n  clearable: Boolean,\n  /**\n   * @description custom clear icon\n   */\n  clearIcon: {\n    type: iconPropType,\n    default: CircleClose,\n  },\n  /**\n   * @description tooltip theme, built-in theme: `dark` / `light`\n   */\n  effect: {\n    type: definePropType<'light' | 'dark' | string>(String),\n    default: 'light',\n  },\n  /**\n   * @description whether to collapse tags to a text when multiple selecting\n   */\n  collapseTags: Boolean,\n  /**\n   * @description whether show all selected tags when mouse hover text of collapse-tags. To use this, `collapse-tags` must be true\n   */\n  collapseTagsTooltip: Boolean,\n  /**\n   * @description The max tags number to be shown. To use this, `collapse-tags` must be true\n   */\n  maxCollapseTags: {\n    type: Number,\n    default: 1,\n  },\n  /**\n   * @description\n   */\n  defaultFirstOption: Boolean,\n  /**\n   * @description is disabled\n   */\n  disabled: Boolean,\n  /**\n   * @description\n   */\n  estimatedOptionHeight: {\n    type: Number,\n    default: undefined,\n  },\n  /**\n   * @description is filterable\n   */\n  filterable: Boolean,\n  /**\n   * @description\n   */\n  filterMethod: Function,\n  /**\n   * @description The height of the dropdown panel, 34px for each item\n   */\n  height: {\n    type: Number,\n    default: 274, // same as select dropdown menu\n  },\n  /**\n   * @description The height of the dropdown item\n   */\n  itemHeight: {\n    type: Number,\n    default: 34,\n  },\n  /**\n   * @description\n   */\n  id: String,\n  /**\n   * @description whether Select is loading data from server\n   */\n  loading: Boolean,\n  /**\n   * @description displayed text while loading data from server, default is 'Loading'\n   */\n  loadingText: String,\n  /**\n   * @description biding value\n   */\n  modelValue: {\n    type: definePropType<\n      any[] | string | number | boolean | Record<string, any> | any\n    >([Array, String, Number, Boolean, Object]),\n  },\n  /**\n   * @description is multiple\n   */\n  multiple: Boolean,\n  /**\n   * @description maximum number of options user can select when multiple is true. No limit when set to 0\n   */\n  multipleLimit: {\n    type: Number,\n    default: 0,\n  },\n  /**\n   * @description the name attribute of select input\n   */\n  name: String,\n  /**\n   * @description displayed text when there is no options, you can also use slot empty, the default is 'No Data'\n   */\n  noDataText: String,\n  /**\n   * @description displayed text when no data matches the filtering query, you can also use slot `empty`, default is 'No matching data'\n   */\n  noMatchText: String,\n  /**\n   * @description function that gets called when the input value changes. Its parameter is the current input value. To use this, `filterable` must be true\n   */\n  remoteMethod: Function,\n  /**\n   * @description whether reserve the keyword after select filtered option.\n   */\n  reserveKeyword: {\n    type: Boolean,\n    default: true,\n  },\n  /**\n   * @description data of the options, the key of `value` and `label` can be customize by `props`\n   */\n  options: {\n    type: definePropType<OptionType[]>(Array),\n    required: true,\n  },\n  /**\n   * @description placeholder, the default is 'Please select'\n   */\n  placeholder: {\n    type: String,\n  },\n  /**\n   * @description whether select dropdown is teleported to the body\n   */\n  teleported: useTooltipContentProps.teleported,\n  /**\n   * @description when select dropdown is inactive and `persistent` is `false`, select dropdown will be destroyed\n   */\n  persistent: {\n    type: Boolean,\n    default: true,\n  },\n  /**\n   * @description custom class name for Select's dropdown\n   */\n  popperClass: {\n    type: String,\n    default: '',\n  },\n  /**\n   * @description [popper.js](https://popper.js.org/docs/v2/) parameters\n   */\n  popperOptions: {\n    type: definePropType<Partial<Options>>(Object),\n    default: () => ({} as Partial<Options>),\n  },\n  /**\n   * @description whether search data from server\n   */\n  remote: Boolean,\n  /**\n   * @description size of component\n   */\n  size: useSizeProp,\n  /**\n   * @description configuration options, see the following table\n   */\n  props: {\n    type: definePropType<Props>(Object),\n    default: () => defaultProps,\n  },\n  /**\n   * @description unique identity key name for value, required when value is an object\n   */\n  valueKey: {\n    type: String,\n    default: 'value',\n  },\n  /**\n   * @description Controls whether the scrollbar is always displayed\n   */\n  scrollbarAlwaysOn: Boolean,\n  /**\n   * @description whether to trigger form validation\n   */\n  validateEvent: {\n    type: Boolean,\n    default: true,\n  },\n  /**\n   * @description position of dropdown\n   */\n  placement: {\n    type: definePropType<Placement>(String),\n    values: placements,\n    default: 'bottom-start',\n  },\n  /**\n   * @description list of possible positions for dropdown\n   */\n  fallbackPlacements: {\n    type: definePropType<Placement[]>(Array),\n    default: ['bottom-start', 'top-start', 'right', 'left'],\n  },\n  /**\n   * @description tag type\n   */\n  tagType: { ...tagProps.type, default: 'info' },\n  ...useEmptyValuesProps,\n  ...useAriaProps(['ariaLabel']),\n} as const)\n\nexport const OptionProps = buildProps({\n  data: Array,\n  disabled: Boolean,\n  hovering: Boolean,\n  item: {\n    type: definePropType<Option>(Object),\n    required: true,\n  },\n  index: Number,\n  style: Object,\n  selected: Boolean,\n  created: Boolean,\n} as const)\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}