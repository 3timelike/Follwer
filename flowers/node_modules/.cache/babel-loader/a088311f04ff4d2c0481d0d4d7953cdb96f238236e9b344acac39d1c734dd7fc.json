{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nrequire('../../../utils/index.js');\nrequire('../../../constants/index.js');\nvar types = require('../../../utils/types.js');\nvar shared = require('@vue/shared');\nvar runtime = require('../../../utils/vue/props/runtime.js');\nvar typescript = require('../../../utils/typescript.js');\nvar event = require('../../../constants/event.js');\nconst emitChangeFn = value => types.isNumber(value) || shared.isString(value) || shared.isArray(value);\nconst collapseProps = runtime.buildProps({\n  accordion: Boolean,\n  modelValue: {\n    type: runtime.definePropType([Array, String, Number]),\n    default: () => typescript.mutable([])\n  }\n});\nconst collapseEmits = {\n  [event.UPDATE_MODEL_EVENT]: emitChangeFn,\n  [event.CHANGE_EVENT]: emitChangeFn\n};\nexports.collapseEmits = collapseEmits;\nexports.collapseProps = collapseProps;\nexports.emitChangeFn = emitChangeFn;","map":{"version":3,"names":["emitChangeFn","value","types","isNumber","shared","isString","isArray","collapseProps","runtime","buildProps","accordion","Boolean","modelValue","type","definePropType","Array","String","Number","default","typescript","mutable","collapseEmits","event","UPDATE_MODEL_EVENT","CHANGE_EVENT"],"sources":["../../../../../../packages/components/collapse/src/collapse.ts"],"sourcesContent":["import {\n  buildProps,\n  definePropType,\n  isArray,\n  isNumber,\n  isString,\n  mutable,\n} from '@element-plus/utils'\nimport { CHANGE_EVENT, UPDATE_MODEL_EVENT } from '@element-plus/constants'\nimport type { ExtractPropTypes } from 'vue'\nimport type { Arrayable } from '@element-plus/utils'\n\nexport type CollapseActiveName = string | number\nexport type CollapseModelValue = Arrayable<CollapseActiveName>\n\nexport const emitChangeFn = (value: CollapseModelValue) =>\n  isNumber(value) || isString(value) || isArray(value)\n\nexport const collapseProps = buildProps({\n  /**\n   * @description whether to activate accordion mode\n   */\n  accordion: Boolean,\n  /**\n   * @description currently active panel, the type is `string` in accordion mode, otherwise it is `array`\n   */\n  modelValue: {\n    type: definePropType<CollapseModelValue>([Array, String, Number]),\n    default: () => mutable([] as const),\n  },\n} as const)\nexport type CollapseProps = ExtractPropTypes<typeof collapseProps>\n\nexport const collapseEmits = {\n  [UPDATE_MODEL_EVENT]: emitChangeFn,\n  [CHANGE_EVENT]: emitChangeFn,\n}\nexport type CollapseEmits = typeof collapseEmits\n"],"mappings":";;;;;;;;;;;;AASY,MAACA,YAAY,GAAIC,KAAK,IAAKC,KAAA,CAAAC,QAAQ,CAACF,KAAK,CAAC,IAAIG,MAAA,CAAAC,QAAQ,CAACJ,KAAK,CAAC,IAAIG,MAAA,CAAAE,OAAO,CAACL,KAAK;AAC9E,MAACM,aAAa,GAAGC,OAAA,CAAAC,UAAU,CAAC;EACtCC,SAAS,EAAEC,OAAO;EAClBC,UAAU,EAAE;IACVC,IAAI,EAAEL,OAAA,CAAAM,cAAc,CAAC,CAACC,KAAK,EAAEC,MAAM,EAAEC,MAAM,CAAC,CAAC;IAC7CC,OAAO,EAAEA,CAAA,KAAMC,UAAA,CAAAC,OAAO,CAAC,EAAE;EAC7B;AACA,CAAC;AACW,MAACC,aAAa,GAAG;EAC3B,CAACC,KAAA,CAAAC,kBAAkB,GAAGvB,YAAY;EAClC,CAACsB,KAAA,CAAAE,YAAY,GAAGxB;AAClB","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}