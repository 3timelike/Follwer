{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar core = require('@popperjs/core');\nrequire('../../../utils/index.js');\nrequire('../../../constants/index.js');\nrequire('../../../hooks/index.js');\nvar runtime = require('../../../utils/vue/props/runtime.js');\nvar index = require('../../../hooks/use-size/index.js');\nvar index$1 = require('../../../hooks/use-aria/index.js');\nvar types = require('../../../utils/types.js');\nvar shared = require('@vue/shared');\nvar event = require('../../../constants/event.js');\nconst sliderProps = runtime.buildProps({\n  modelValue: {\n    type: runtime.definePropType([Number, Array]),\n    default: 0\n  },\n  id: {\n    type: String,\n    default: void 0\n  },\n  min: {\n    type: Number,\n    default: 0\n  },\n  max: {\n    type: Number,\n    default: 100\n  },\n  step: {\n    type: Number,\n    default: 1\n  },\n  showInput: Boolean,\n  showInputControls: {\n    type: Boolean,\n    default: true\n  },\n  size: index.useSizeProp,\n  inputSize: index.useSizeProp,\n  showStops: Boolean,\n  showTooltip: {\n    type: Boolean,\n    default: true\n  },\n  formatTooltip: {\n    type: runtime.definePropType(Function),\n    default: void 0\n  },\n  disabled: Boolean,\n  range: Boolean,\n  vertical: Boolean,\n  height: String,\n  debounce: {\n    type: Number,\n    default: 300\n  },\n  label: {\n    type: String,\n    default: void 0\n  },\n  rangeStartLabel: {\n    type: String,\n    default: void 0\n  },\n  rangeEndLabel: {\n    type: String,\n    default: void 0\n  },\n  formatValueText: {\n    type: runtime.definePropType(Function),\n    default: void 0\n  },\n  tooltipClass: {\n    type: String,\n    default: void 0\n  },\n  placement: {\n    type: String,\n    values: core.placements,\n    default: \"top\"\n  },\n  marks: {\n    type: runtime.definePropType(Object)\n  },\n  validateEvent: {\n    type: Boolean,\n    default: true\n  },\n  ...index$1.useAriaProps([\"ariaLabel\"])\n});\nconst isValidValue = value => types.isNumber(value) || shared.isArray(value) && value.every(types.isNumber);\nconst sliderEmits = {\n  [event.UPDATE_MODEL_EVENT]: isValidValue,\n  [event.INPUT_EVENT]: isValidValue,\n  [event.CHANGE_EVENT]: isValidValue\n};\nexports.sliderEmits = sliderEmits;\nexports.sliderProps = sliderProps;","map":{"version":3,"names":["sliderProps","runtime","buildProps","modelValue","type","definePropType","Number","Array","default","id","String","min","max","step","showInput","Boolean","showInputControls","size","index","useSizeProp","inputSize","showStops","showTooltip","formatTooltip","Function","disabled","range","vertical","height","debounce","label","rangeStartLabel","rangeEndLabel","formatValueText","tooltipClass","placement","values","core","placements","marks","Object","validateEvent","index$1","useAriaProps","isValidValue","value","types","isNumber","shared","isArray","every","sliderEmits","event","UPDATE_MODEL_EVENT","INPUT_EVENT","CHANGE_EVENT"],"sources":["../../../../../../packages/components/slider/src/slider.ts"],"sourcesContent":["import { placements } from '@popperjs/core'\nimport {\n  buildProps,\n  definePropType,\n  isArray,\n  isNumber,\n} from '@element-plus/utils'\nimport {\n  CHANGE_EVENT,\n  INPUT_EVENT,\n  UPDATE_MODEL_EVENT,\n} from '@element-plus/constants'\nimport { useAriaProps, useSizeProp } from '@element-plus/hooks'\nimport type { Arrayable } from '@element-plus/utils'\nimport type { ExtractPropTypes } from 'vue'\nimport type { SliderMarkerProps } from './marker'\nimport type Slider from './slider.vue'\n\ntype SliderMarks = Record<number, string | SliderMarkerProps['mark']>\n\nexport interface SliderInitData {\n  firstValue: number\n  secondValue: number\n  oldValue?: Arrayable<number>\n  dragging: boolean\n  sliderSize: number\n}\n\nexport const sliderProps = buildProps({\n  /**\n   * @description binding value\n   */\n  modelValue: {\n    type: definePropType<Arrayable<number>>([Number, Array]),\n    default: 0,\n  },\n  id: {\n    type: String,\n    default: undefined,\n  },\n  /**\n   * @description minimum value\n   */\n  min: {\n    type: Number,\n    default: 0,\n  },\n  /**\n   * @description maximum value\n   */\n  max: {\n    type: Number,\n    default: 100,\n  },\n  /**\n   * @description step size\n   */\n  step: {\n    type: Number,\n    default: 1,\n  },\n  /**\n   * @description whether to display an input box, works when `range` is false\n   */\n  showInput: Boolean,\n  /**\n   * @description whether to display control buttons when `show-input` is true\n   */\n  showInputControls: {\n    type: Boolean,\n    default: true,\n  },\n  /**\n   * @description size of the slider wrapper, will not work in vertical mode\n   */\n  size: useSizeProp,\n  /**\n   * @description size of the input box, when set `size`, the default is the value of `size`\n   */\n  inputSize: useSizeProp,\n  /**\n   * @description whether to display breakpoints\n   */\n  showStops: Boolean,\n  /**\n   * @description whether to display tooltip value\n   */\n  showTooltip: {\n    type: Boolean,\n    default: true,\n  },\n  /**\n   * @description format to display tooltip value\n   */\n  formatTooltip: {\n    type: definePropType<(val: number) => number | string>(Function),\n    default: undefined,\n  },\n  /**\n   * @description whether Slider is disabled\n   */\n  disabled: Boolean,\n  /**\n   * @description whether to select a range\n   */\n  range: Boolean,\n  /**\n   * @description vertical mode\n   */\n  vertical: Boolean,\n  /**\n   * @description slider height, required in vertical mode\n   */\n  height: String,\n  /**\n   * @description debounce delay when typing, in milliseconds, works when `show-input` is true\n   */\n  debounce: {\n    type: Number,\n    default: 300,\n  },\n  /**\n   * @deprecated label for screen reader\n   */\n  label: {\n    type: String,\n    default: undefined,\n  },\n  /**\n   * @description when `range` is true, screen reader label for the start of the range\n   */\n  rangeStartLabel: {\n    type: String,\n    default: undefined,\n  },\n  /**\n   * @description when `range` is true, screen reader label for the end of the range\n   */\n  rangeEndLabel: {\n    type: String,\n    default: undefined,\n  },\n  /**\n   * @description format to display the `aria-valuenow` attribute for screen readers\n   */\n  formatValueText: {\n    type: definePropType<(val: number) => string>(Function),\n    default: undefined,\n  },\n  /**\n   * @description custom class name for the tooltip\n   */\n  tooltipClass: {\n    type: String,\n    default: undefined,\n  },\n  /**\n   * @description position of Tooltip\n   */\n  placement: {\n    type: String,\n    values: placements,\n    default: 'top',\n  },\n  /**\n   * @description marks, type of key must be `number` and must in closed interval `[min, max]`, each mark can custom style\n   */\n  marks: {\n    type: definePropType<SliderMarks>(Object),\n  },\n  /**\n   * @description whether to trigger form validation\n   */\n  validateEvent: {\n    type: Boolean,\n    default: true,\n  },\n  ...useAriaProps(['ariaLabel']),\n} as const)\nexport type SliderProps = ExtractPropTypes<typeof sliderProps>\n\nconst isValidValue = (value: Arrayable<number>) =>\n  isNumber(value) || (isArray(value) && value.every(isNumber))\nexport const sliderEmits = {\n  [UPDATE_MODEL_EVENT]: isValidValue,\n  [INPUT_EVENT]: isValidValue,\n  [CHANGE_EVENT]: isValidValue,\n}\nexport type SliderEmits = typeof sliderEmits\n\nexport type SliderInstance = InstanceType<typeof Slider>\n"],"mappings":";;;;;;;;;;;;;;;AAaY,MAACA,WAAW,GAAGC,OAAA,CAAAC,UAAU,CAAC;EACpCC,UAAU,EAAE;IACVC,IAAI,EAAEH,OAAA,CAAAI,cAAc,CAAC,CAACC,MAAM,EAAEC,KAAK,CAAC,CAAC;IACrCC,OAAO,EAAE;EACb,CAAG;EACDC,EAAE,EAAE;IACFL,IAAI,EAAEM,MAAM;IACZF,OAAO,EAAE,KAAK;EAClB,CAAG;EACDG,GAAG,EAAE;IACHP,IAAI,EAAEE,MAAM;IACZE,OAAO,EAAE;EACb,CAAG;EACDI,GAAG,EAAE;IACHR,IAAI,EAAEE,MAAM;IACZE,OAAO,EAAE;EACb,CAAG;EACDK,IAAI,EAAE;IACJT,IAAI,EAAEE,MAAM;IACZE,OAAO,EAAE;EACb,CAAG;EACDM,SAAS,EAAEC,OAAO;EAClBC,iBAAiB,EAAE;IACjBZ,IAAI,EAAEW,OAAO;IACbP,OAAO,EAAE;EACb,CAAG;EACDS,IAAI,EAAEC,KAAA,CAAAC,WAAW;EACjBC,SAAS,EAAEF,KAAA,CAAAC,WAAW;EACtBE,SAAS,EAAEN,OAAO;EAClBO,WAAW,EAAE;IACXlB,IAAI,EAAEW,OAAO;IACbP,OAAO,EAAE;EACb,CAAG;EACDe,aAAa,EAAE;IACbnB,IAAI,EAAEH,OAAA,CAAAI,cAAc,CAACmB,QAAQ,CAAC;IAC9BhB,OAAO,EAAE,KAAK;EAClB,CAAG;EACDiB,QAAQ,EAAEV,OAAO;EACjBW,KAAK,EAAEX,OAAO;EACdY,QAAQ,EAAEZ,OAAO;EACjBa,MAAM,EAAElB,MAAM;EACdmB,QAAQ,EAAE;IACRzB,IAAI,EAAEE,MAAM;IACZE,OAAO,EAAE;EACb,CAAG;EACDsB,KAAK,EAAE;IACL1B,IAAI,EAAEM,MAAM;IACZF,OAAO,EAAE,KAAK;EAClB,CAAG;EACDuB,eAAe,EAAE;IACf3B,IAAI,EAAEM,MAAM;IACZF,OAAO,EAAE,KAAK;EAClB,CAAG;EACDwB,aAAa,EAAE;IACb5B,IAAI,EAAEM,MAAM;IACZF,OAAO,EAAE,KAAK;EAClB,CAAG;EACDyB,eAAe,EAAE;IACf7B,IAAI,EAAEH,OAAA,CAAAI,cAAc,CAACmB,QAAQ,CAAC;IAC9BhB,OAAO,EAAE,KAAK;EAClB,CAAG;EACD0B,YAAY,EAAE;IACZ9B,IAAI,EAAEM,MAAM;IACZF,OAAO,EAAE,KAAK;EAClB,CAAG;EACD2B,SAAS,EAAE;IACT/B,IAAI,EAAEM,MAAM;IACZ0B,MAAM,EAAEC,IAAA,CAAAC,UAAU;IAClB9B,OAAO,EAAE;EACb,CAAG;EACD+B,KAAK,EAAE;IACLnC,IAAI,EAAEH,OAAA,CAAAI,cAAc,CAACmC,MAAM;EAC/B,CAAG;EACDC,aAAa,EAAE;IACbrC,IAAI,EAAEW,OAAO;IACbP,OAAO,EAAE;EACb,CAAG;EACD,GAAGkC,OAAA,CAAAC,YAAY,CAAC,CAAC,WAAW,CAAC;AAC/B,CAAC;AACD,MAAMC,YAAY,GAAIC,KAAK,IAAKC,KAAA,CAAAC,QAAQ,CAACF,KAAK,CAAC,IAAIG,MAAA,CAAAC,OAAO,CAACJ,KAAK,CAAC,IAAIA,KAAK,CAACK,KAAK,CAACJ,KAAA,CAAAC,QAAQ,CAAC;AAC9E,MAACI,WAAW,GAAG;EACzB,CAACC,KAAA,CAAAC,kBAAkB,GAAGT,YAAY;EAClC,CAACQ,KAAA,CAAAE,WAAW,GAAGV,YAAY;EAC3B,CAACQ,KAAA,CAAAG,YAAY,GAAGX;AAClB","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}