{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar shared = require('@vue/shared');\nrequire('../../../utils/index.js');\nrequire('../../../constants/index.js');\nrequire('../../../hooks/index.js');\nvar runtime = require('../../../utils/vue/props/runtime.js');\nvar index = require('../../../hooks/use-size/index.js');\nvar icon = require('../../../utils/vue/icon.js');\nvar typescript = require('../../../utils/typescript.js');\nvar index$1 = require('../../../hooks/use-aria/index.js');\nvar event = require('../../../constants/event.js');\nconst inputProps = runtime.buildProps({\n  id: {\n    type: String,\n    default: void 0\n  },\n  size: index.useSizeProp,\n  disabled: Boolean,\n  modelValue: {\n    type: runtime.definePropType([String, Number, Object]),\n    default: \"\"\n  },\n  maxlength: {\n    type: [String, Number]\n  },\n  minlength: {\n    type: [String, Number]\n  },\n  type: {\n    type: String,\n    default: \"text\"\n  },\n  resize: {\n    type: String,\n    values: [\"none\", \"both\", \"horizontal\", \"vertical\"]\n  },\n  autosize: {\n    type: runtime.definePropType([Boolean, Object]),\n    default: false\n  },\n  autocomplete: {\n    type: String,\n    default: \"off\"\n  },\n  formatter: {\n    type: Function\n  },\n  parser: {\n    type: Function\n  },\n  placeholder: {\n    type: String\n  },\n  form: {\n    type: String\n  },\n  readonly: {\n    type: Boolean,\n    default: false\n  },\n  clearable: {\n    type: Boolean,\n    default: false\n  },\n  showPassword: {\n    type: Boolean,\n    default: false\n  },\n  showWordLimit: {\n    type: Boolean,\n    default: false\n  },\n  suffixIcon: {\n    type: icon.iconPropType\n  },\n  prefixIcon: {\n    type: icon.iconPropType\n  },\n  containerRole: {\n    type: String,\n    default: void 0\n  },\n  label: {\n    type: String,\n    default: void 0\n  },\n  tabindex: {\n    type: [String, Number],\n    default: 0\n  },\n  validateEvent: {\n    type: Boolean,\n    default: true\n  },\n  inputStyle: {\n    type: runtime.definePropType([Object, Array, String]),\n    default: () => typescript.mutable({})\n  },\n  autofocus: {\n    type: Boolean,\n    default: false\n  },\n  ...index$1.useAriaProps([\"ariaLabel\"])\n});\nconst inputEmits = {\n  [event.UPDATE_MODEL_EVENT]: value => shared.isString(value),\n  input: value => shared.isString(value),\n  change: value => shared.isString(value),\n  focus: evt => evt instanceof FocusEvent,\n  blur: evt => evt instanceof FocusEvent,\n  clear: () => true,\n  mouseleave: evt => evt instanceof MouseEvent,\n  mouseenter: evt => evt instanceof MouseEvent,\n  keydown: evt => evt instanceof Event,\n  compositionstart: evt => evt instanceof CompositionEvent,\n  compositionupdate: evt => evt instanceof CompositionEvent,\n  compositionend: evt => evt instanceof CompositionEvent\n};\nexports.inputEmits = inputEmits;\nexports.inputProps = inputProps;","map":{"version":3,"names":["inputProps","runtime","buildProps","id","type","String","default","size","index","useSizeProp","disabled","Boolean","modelValue","definePropType","Number","Object","maxlength","minlength","resize","values","autosize","autocomplete","formatter","Function","parser","placeholder","form","readonly","clearable","showPassword","showWordLimit","suffixIcon","icon","iconPropType","prefixIcon","containerRole","label","tabindex","validateEvent","inputStyle","Array","typescript","mutable","autofocus","index$1","useAriaProps","inputEmits","event","UPDATE_MODEL_EVENT","value","shared","isString","input","change","focus","evt","FocusEvent","blur","clear","mouseleave","MouseEvent","mouseenter","keydown","Event","compositionstart","CompositionEvent","compositionupdate","compositionend"],"sources":["../../../../../../packages/components/input/src/input.ts"],"sourcesContent":["import { isString } from '@vue/shared'\nimport {\n  buildProps,\n  definePropType,\n  iconPropType,\n  mutable,\n} from '@element-plus/utils'\nimport { UPDATE_MODEL_EVENT } from '@element-plus/constants'\nimport { useAriaProps, useSizeProp } from '@element-plus/hooks'\nimport type Input from './input.vue'\nimport type { ExtractPropTypes, StyleValue } from 'vue'\n\nexport type InputAutoSize = { minRows?: number; maxRows?: number } | boolean\n\nexport const inputProps = buildProps({\n  /**\n   * @description native input id\n   */\n  id: {\n    type: String,\n    default: undefined,\n  },\n  /**\n   * @description input box size\n   */\n  size: useSizeProp,\n  /**\n   * @description whether to disable\n   */\n  disabled: Boolean,\n  /**\n   * @description binding value\n   */\n  modelValue: {\n    type: definePropType<string | number | null | undefined>([\n      String,\n      Number,\n      Object,\n    ]),\n    default: '',\n  },\n  /**\n   * @description same as `maxlength` in native input\n   */\n  maxlength: {\n    type: [String, Number],\n  },\n  /**\n   * @description same as `minlength` in native input\n   */\n  minlength: {\n    type: [String, Number],\n  },\n  /**\n   * @description type of input\n   */\n  type: {\n    type: String,\n    default: 'text',\n  },\n  /**\n   * @description control the resizability\n   */\n  resize: {\n    type: String,\n    values: ['none', 'both', 'horizontal', 'vertical'],\n  },\n  /**\n   * @description whether textarea has an adaptive height\n   */\n  autosize: {\n    type: definePropType<InputAutoSize>([Boolean, Object]),\n    default: false,\n  },\n  /**\n   * @description native input autocomplete\n   */\n  autocomplete: {\n    type: String,\n    default: 'off',\n  },\n  /**\n   * @description format content\n   */\n  formatter: {\n    type: Function,\n  },\n  /**\n   * @description parse content\n   */\n  parser: {\n    type: Function,\n  },\n  /**\n   * @description placeholder\n   */\n  placeholder: {\n    type: String,\n  },\n  /**\n   * @description native input form\n   */\n  form: {\n    type: String,\n  },\n  /**\n   * @description native input readonly\n   */\n  readonly: {\n    type: Boolean,\n    default: false,\n  },\n  /**\n   * @description native input readonly\n   */\n  clearable: {\n    type: Boolean,\n    default: false,\n  },\n  /**\n   * @description toggleable password input\n   */\n  showPassword: {\n    type: Boolean,\n    default: false,\n  },\n  /**\n   * @description word count\n   */\n  showWordLimit: {\n    type: Boolean,\n    default: false,\n  },\n  /**\n   * @description suffix icon\n   */\n  suffixIcon: {\n    type: iconPropType,\n  },\n  /**\n   * @description prefix icon\n   */\n  prefixIcon: {\n    type: iconPropType,\n  },\n  /**\n   * @description container role, internal properties provided for use by the picker component\n   */\n  containerRole: {\n    type: String,\n    default: undefined,\n  },\n  /**\n   * @deprecated native input aria-label\n   */\n  label: {\n    type: String,\n    default: undefined,\n  },\n  /**\n   * @description input tabindex\n   */\n  tabindex: {\n    type: [String, Number],\n    default: 0,\n  },\n  /**\n   * @description whether to trigger form validation\n   */\n  validateEvent: {\n    type: Boolean,\n    default: true,\n  },\n  /**\n   * @description input or textarea element style\n   */\n  inputStyle: {\n    type: definePropType<StyleValue>([Object, Array, String]),\n    default: () => mutable({} as const),\n  },\n  /**\n   * @description native input autofocus\n   */\n  autofocus: {\n    type: Boolean,\n    default: false,\n  },\n  ...useAriaProps(['ariaLabel']),\n} as const)\nexport type InputProps = ExtractPropTypes<typeof inputProps>\n\nexport const inputEmits = {\n  [UPDATE_MODEL_EVENT]: (value: string) => isString(value),\n  input: (value: string) => isString(value),\n  change: (value: string) => isString(value),\n  focus: (evt: FocusEvent) => evt instanceof FocusEvent,\n  blur: (evt: FocusEvent) => evt instanceof FocusEvent,\n  clear: () => true,\n  mouseleave: (evt: MouseEvent) => evt instanceof MouseEvent,\n  mouseenter: (evt: MouseEvent) => evt instanceof MouseEvent,\n  // NOTE: when autofill by browser, the keydown event is instanceof Event, not KeyboardEvent\n  // relative bug report https://github.com/element-plus/element-plus/issues/6665\n  keydown: (evt: KeyboardEvent | Event) => evt instanceof Event,\n  compositionstart: (evt: CompositionEvent) => evt instanceof CompositionEvent,\n  compositionupdate: (evt: CompositionEvent) => evt instanceof CompositionEvent,\n  compositionend: (evt: CompositionEvent) => evt instanceof CompositionEvent,\n}\nexport type InputEmits = typeof inputEmits\n\nexport type InputInstance = InstanceType<typeof Input>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}