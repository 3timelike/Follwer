{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport request from \"@/utils/index\";\nimport Clock from \"@/components/Clock\";\nconst {\n  ElMessage\n} = require(\"element-plus\");\nexport default {\n  name: \"HeaderHappy\",\n  components: {\n    Clock\n  },\n  data() {\n    return {\n      name: '',\n      identify: \"\",\n      status: false,\n      form: {\n        username: \"\"\n      },\n      // 定时任务配置\n      config: {\n        time: '00:00:00',\n        // 每天几点执行\n        interval: 1,\n        // 隔几天执行一次\n        runNow: false,\n        // 是否立即执行\n        intervalTimer: '',\n        timeOutTimer: ''\n      }\n    };\n  },\n  created() {\n    this.load();\n  },\n  // 一定要记得在组件销毁阶段清除定时器\n  beforeon() {\n    // 清除任务定时器\n    clearInterval(this.config.intervalTimer);\n    // 清除定时器timeout\n    clearTimeout(this.config.timeOutTimer);\n  },\n  methods: {\n    load() {\n      var data = JSON.parse(sessionStorage.getItem(\"user\"));\n      this.form.username = data.username;\n      this.identify = JSON.parse(sessionStorage.getItem(\"identity\"));\n    },\n    SignOut() {\n      sessionStorage.clear();\n      request.get(\"/main/signOut\");\n      ElMessage({\n        message: '用户退出登录',\n        type: 'success'\n      });\n      this.$router.replace({\n        path: '/login'\n      });\n    },\n    selfInfoManage() {\n      this.$router.push(\"/selfInfo\");\n    },\n    signup() {\n      if (!this.status) {\n        console.log(this.form);\n        request.post(\"/\" + this.identify + \"/signup\", this.form).then(res => {\n          if (res.code === 200) {\n            console.log(\"chengg\");\n            ElMessage({\n              message: \"签到成功\",\n              type: \"success\"\n            });\n            this.status = res.data;\n            //签到成功刷新页面\n            this.$router.push(\"/home\");\n          } else {\n            console.log(\"fail\");\n            console.log(res.message);\n            ElMessage({\n              message: res.message,\n              type: \"error\"\n            });\n          }\n        });\n      } else {\n        alert(\"签到过了，无需再次签到\");\n      }\n    }\n  }\n};","map":{"version":3,"names":["request","Clock","ElMessage","require","name","components","data","identify","status","form","username","config","time","interval","runNow","intervalTimer","timeOutTimer","created","load","beforeon","clearInterval","clearTimeout","methods","JSON","parse","sessionStorage","getItem","SignOut","clear","get","message","type","$router","replace","path","selfInfoManage","push","signup","console","log","post","then","res","code","alert"],"sources":["C:\\Users\\zhang\\Desktop\\myvueeee\\flowers\\src\\components\\Header.vue"],"sourcesContent":["<template>\n  <div style=\"line-height: 50px;display: flex\">\n    <div style=\"width: 200px;margin-left: 10px; font-weight: bold; color: dodgerblue\">川の鲜花店</div>\n    <Clock style=\"font-size: 20px;position: absolute;left: 50%;overflow: hidden;\"/>\n    <div style=\"flex: 1\"></div>\n    <div class=\"right-info\">\n      <el-dropdown>\n        <span class=\"el-dropdown-link\">\n          <el-icon :size=\"18\" style=\"float: left;margin-right: 7px;\"><avatar/></el-icon>\n          个人中心\n          <el-icon class=\"el-icon--right\"><arrow-down/></el-icon>\n        </span>\n        <template #dropdown>\n          <el-dropdown-menu>\n            <el-dropdown-item @click=\"selfInfoManage\">个人信息</el-dropdown-item>\n             <el-dropdown-item @click=\"signup\">今日签到</el-dropdown-item>\n            <el-dropdown-item @click=\"SignOut\">退出登录</el-dropdown-item>\n          </el-dropdown-menu>\n        </template>\n      </el-dropdown>\n    </div>\n  </div>\n</template>\n\n<script>\n\nimport request from \"@/utils/index\";\nimport Clock from \"@/components/Clock\";\n\nconst {ElMessage} = require(\"element-plus\");\nexport default {\n  name: \"HeaderHappy\",\n  components: {\n    Clock\n  },\n  data() {\n    return {\n      name: '',\n      identify:\"\",\n       status:false,\n      form:{\n        username:\"\",\n      \n      },\n        // 定时任务配置\n      config: {\n        time: '00:00:00', // 每天几点执行\n        interval: 1, // 隔几天执行一次\n        runNow: false, // 是否立即执行\n        intervalTimer: '',\n        timeOutTimer: ''\n      }\n    }\n  },\n  created() {\n         this.load();\n  },\n  // 一定要记得在组件销毁阶段清除定时器\n beforeon () {\n    // 清除任务定时器\n    clearInterval(this.config.intervalTimer)\n    // 清除定时器timeout\n    clearTimeout(this.config.timeOutTimer)\n  },\n  methods: {\n     load() {\n            var data = JSON.parse(sessionStorage.getItem(\"user\"));\n            this.form.username = data.username\n            this.identify =  JSON.parse(sessionStorage.getItem(\"identity\"));\n      },\n    SignOut() {\n      sessionStorage.clear()\n      request.get(\"/main/signOut\");\n      ElMessage({\n        message: '用户退出登录',\n        type: 'success',\n      });\n      this.$router.replace({path: '/login'});\n    },\n    selfInfoManage() {\n      this.$router.push(\"/selfInfo\")\n    },\n    signup(){\n      if(!this.status){\n    console.log(this.form)\n        request.post(\"/\" + this.identify +\"/signup\",this.form).then(res => {\n                if (res.code === 200) {\n                            console.log(\"chengg\")\n                            ElMessage({\n                                message: \"签到成功\",\n                                type: \"success\",\n                            });\n                             this.status = res.data\n                           //签到成功刷新页面\n                             this.$router.push(\"/home\")\n                        } else {\n                            console.log(\"fail\")\n                            console.log(res.message)\n                            ElMessage({\n                                \n                                message: res.message,\n                                type: \"error\",\n                            });\n                        }\n        });\n      }else {\n         alert(\"签到过了，无需再次签到\")\n      }\n    }\n  },\n}\n</script>\n\n<style scoped>\n.right-info {\n  width: 120px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-right: 1.5%;\n}\n\n.right-info:hover {\n  cursor: pointer;\n}\n</style>"],"mappings":";AA0BA,OAAOA,OAAM,MAAO,eAAe;AACnC,OAAOC,KAAI,MAAO,oBAAoB;AAEtC,MAAM;EAACC;AAAS,IAAIC,OAAO,CAAC,cAAc,CAAC;AAC3C,eAAe;EACbC,IAAI,EAAE,aAAa;EACnBC,UAAU,EAAE;IACVJ;EACF,CAAC;EACDK,IAAIA,CAAA,EAAG;IACL,OAAO;MACLF,IAAI,EAAE,EAAE;MACRG,QAAQ,EAAC,EAAE;MACVC,MAAM,EAAC,KAAK;MACbC,IAAI,EAAC;QACHC,QAAQ,EAAC;MAEX,CAAC;MACC;MACFC,MAAM,EAAE;QACNC,IAAI,EAAE,UAAU;QAAE;QAClBC,QAAQ,EAAE,CAAC;QAAE;QACbC,MAAM,EAAE,KAAK;QAAE;QACfC,aAAa,EAAE,EAAE;QACjBC,YAAY,EAAE;MAChB;IACF;EACF,CAAC;EACDC,OAAOA,CAAA,EAAG;IACH,IAAI,CAACC,IAAI,CAAC,CAAC;EAClB,CAAC;EACD;EACDC,QAAOA,CAAA,EAAK;IACT;IACAC,aAAa,CAAC,IAAI,CAACT,MAAM,CAACI,aAAa;IACvC;IACAM,YAAY,CAAC,IAAI,CAACV,MAAM,CAACK,YAAY;EACvC,CAAC;EACDM,OAAO,EAAE;IACNJ,IAAIA,CAAA,EAAG;MACA,IAAIZ,IAAG,GAAIiB,IAAI,CAACC,KAAK,CAACC,cAAc,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC;MACrD,IAAI,CAACjB,IAAI,CAACC,QAAO,GAAIJ,IAAI,CAACI,QAAO;MACjC,IAAI,CAACH,QAAO,GAAKgB,IAAI,CAACC,KAAK,CAACC,cAAc,CAACC,OAAO,CAAC,UAAU,CAAC,CAAC;IACrE,CAAC;IACHC,OAAOA,CAAA,EAAG;MACRF,cAAc,CAACG,KAAK,CAAC;MACrB5B,OAAO,CAAC6B,GAAG,CAAC,eAAe,CAAC;MAC5B3B,SAAS,CAAC;QACR4B,OAAO,EAAE,QAAQ;QACjBC,IAAI,EAAE;MACR,CAAC,CAAC;MACF,IAAI,CAACC,OAAO,CAACC,OAAO,CAAC;QAACC,IAAI,EAAE;MAAQ,CAAC,CAAC;IACxC,CAAC;IACDC,cAAcA,CAAA,EAAG;MACf,IAAI,CAACH,OAAO,CAACI,IAAI,CAAC,WAAW;IAC/B,CAAC;IACDC,MAAMA,CAAA,EAAE;MACN,IAAG,CAAC,IAAI,CAAC7B,MAAM,EAAC;QAClB8B,OAAO,CAACC,GAAG,CAAC,IAAI,CAAC9B,IAAI;QACjBT,OAAO,CAACwC,IAAI,CAAC,GAAE,GAAI,IAAI,CAACjC,QAAO,GAAG,SAAS,EAAC,IAAI,CAACE,IAAI,CAAC,CAACgC,IAAI,CAACC,GAAE,IAAK;UAC3D,IAAIA,GAAG,CAACC,IAAG,KAAM,GAAG,EAAE;YACVL,OAAO,CAACC,GAAG,CAAC,QAAQ;YACpBrC,SAAS,CAAC;cACN4B,OAAO,EAAE,MAAM;cACfC,IAAI,EAAE;YACV,CAAC,CAAC;YACD,IAAI,CAACvB,MAAK,GAAIkC,GAAG,CAACpC,IAAG;YACvB;YACE,IAAI,CAAC0B,OAAO,CAACI,IAAI,CAAC,OAAO;UAC9B,OAAO;YACHE,OAAO,CAACC,GAAG,CAAC,MAAM;YAClBD,OAAO,CAACC,GAAG,CAACG,GAAG,CAACZ,OAAO;YACvB5B,SAAS,CAAC;cAEN4B,OAAO,EAAEY,GAAG,CAACZ,OAAO;cACpBC,IAAI,EAAE;YACV,CAAC,CAAC;UACN;QAChB,CAAC,CAAC;MACJ,CAAC,MAAK;QACHa,KAAK,CAAC,aAAa;MACtB;IACF;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}