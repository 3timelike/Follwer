{"ast":null,"code":"import request from \"@/utils/index\";\n\n// const {ElMessage} = require(\"element-plus\");\nexport default {\n  name: \"selfInfo\",\n  data() {\n    return {\n      showpassword: true,\n      image: \"\",\n      editJudge: true,\n      disabled: true,\n      dialogVisible: false,\n      identity: \"\",\n      username: \"\",\n      name: \"\",\n      gender: \"\",\n      age: \"\",\n      phoneNum: \"\",\n      email: \"\",\n      targetURL: \"\",\n      avatar: \"\",\n      form: {\n        username: \"\",\n        name: \"\",\n        gender: \"\",\n        age: \"\",\n        phoneNum: \"\",\n        email: \"\"\n      },\n      rules: {\n        username: [{\n          required: true,\n          message: \"请输入账号\",\n          trigger: \"blur\"\n        }, {\n          pattern: /^[a-zA-Z0-9]{4,9}$/,\n          message: \"必须由 4 到 9 个字母或数字组成\",\n          trigger: \"blur\"\n        }],\n        name: [{\n          required: true,\n          message: \"请输入姓名\",\n          trigger: \"blur\"\n        }, {\n          pattern: /^(?:[\\u4E00-\\u9FA5·]{2,10})$/,\n          message: \"必须由 2 到 10 个汉字组成\",\n          trigger: \"blur\"\n        }],\n        gender: [{\n          required: true,\n          message: \"请选择性别\",\n          trigger: \"change\"\n        }],\n        age: [{\n          required: true,\n          message: \"请输入年龄\",\n          trigger: \"blur\"\n        }, {\n          type: \"number\",\n          message: \"年龄必须为数字值\",\n          trigger: \"blur\"\n        }, {\n          pattern: /^(1|[1-9]\\d?|100)$/,\n          message: \"范围：1-100\",\n          trigger: \"blur\"\n        }],\n        email: [{\n          type: \"email\",\n          message: \"请输入正确的邮箱地址\",\n          trigger: \"blur\"\n        }],\n        password: [{\n          required: true,\n          message: \"请输入密码\",\n          trigger: \"blur\"\n        }, {\n          min: 6,\n          max: 32,\n          message: \"长度在 6 到 16 个字符\",\n          trigger: \"blur\"\n        }]\n      },\n      display: {\n        display: \"none\"\n      },\n      imgDisplay: {\n        display: \"none\"\n      }\n    };\n  },\n  created() {\n    this.load();\n    this.find();\n    this.init(this.avatar);\n  },\n  methods: {\n    //获取成员信息页面信息\n    load() {\n      this.form = JSON.parse(sessionStorage.getItem(\"user\"));\n      this.identity = JSON.parse(sessionStorage.getItem(\"identity\"));\n      this.username = this.form.username;\n      this.name = this.form.name;\n      this.gender = this.form.gender;\n      this.age = this.form.age;\n      this.phoneNum = this.form.phoneNum;\n      this.email = this.form.email;\n      this.avatar = this.form.avatar;\n    },\n    //查询数据，更新session\n    find() {\n      this.form = JSON.parse(sessionStorage.getItem(\"user\"));\n      request.post(\"/\" + this.identity + \"/login\", this.form).then(res => {\n        //更新sessionStorage\n        window.sessionStorage.setItem(\"user\", JSON.stringify(res.data));\n        //更新页面数据\n        this.load();\n      });\n    }\n    // Edit() {\n    //     this.dialogVisible = true;\n    //     this.$nextTick(() => {\n    //         this.$refs.form.resetFields();\n    //         this.form = JSON.parse(sessionStorage.getItem(\"user\"));\n    //     });\n    // },\n    // cancel() {\n    //     this.$refs.form.resetFields();\n    //     this.display = {display: \"none\"};\n    //     this.showpassword = true;\n    //     this.editJudge = true;\n    //     this.disabled = true;\n    //     this.dialogVisible = false;\n    // },\n    // async save() {\n    //     this.$refs.form.validate(async (valid) => {\n    //         if (valid) {\n    //             //修改\n    //             await request.put(\"/\" + this.identity + \"/update\", this.form).then((res) => {\n    //                 if (res.code === 200) {\n    //                     ElMessage({\n    //                         message: \"修改成功\",\n    //                         type: \"success\",\n    //                     });\n    //                     //更新sessionStorage\n    //                     window.sessionStorage.setItem(\n    //                         \"user\",\n    //                         JSON.stringify(this.form)\n    //                     );\n    //                     this.find();\n    //                     this.dialogVisible = false;\n    //                 } else {\n    //                     ElMessage({\n    //                         message: res.msg,\n    //                         type: \"error\",\n    //                     });\n    //                 }\n    //             });\n    //         }\n    //     });\n    // },\n    //密码编辑状态\n    // EditPass() {\n    //     if (this.editJudge) {\n    //         this.display = {display: \"flex\"};\n    //         this.showpassword = false;\n    //         this.disabled = false;\n    //         this.editJudge = false;\n    //     } else {\n    //         this.display = {display: \"none\"};\n    //         this.showpassword = true;\n    //         this.editJudge = true;\n    //         this.disabled = true;\n    //     }\n    // },\n    //发送请求，获取头像\n    // async init(data) {\n    //     if (data === null || data === \"\") {\n    //         console.log(\"用户未设置头像\");\n    //         this.imgDisplay = {display: \"none\"};\n    //     } else {\n    //         this.imgDisplay = {display: \"block\"};\n    //         console.log(\"头像名称：\" + data);\n    //         await request.get(\"/files//\" + data).then((res) => {\n    //             if (res.code === \"0\") {\n    //                 this.image = res.data.data;\n    //             } else {\n    //                 ElMessage({\n    //                     message: res.msg,\n    //                     type: \"error\",\n    //                 });\n    //             }\n    //         });\n    //     }\n    // },\n    // async uploadSuccess() {\n    //     this.form = JSON.parse(sessionStorage.getItem(\"user\"));\n    //     await request.post(\"/files/uploadAvatar/\" + this.identity, this.form).then((res) => {\n    //         if (res.code === \"0\") {\n    //             ElMessage({\n    //                 message: \"设置成功\",\n    //                 type: \"success\",\n    //             });\n    //             //获取头像文件名\n    //             this.avatar = res.data;\n    //             console.log(\"上传成功：\" + this.avatar);\n    //             this.find();\n    //             this.init(this.avatar);\n    //         } else {\n    //             ElMessage({\n    //                 message: res.msg,\n    //                 type: \"error\",\n    //             });\n    //         }\n    //     });\n    // },\n  }\n};","map":{"version":3,"names":["request","name","data","showpassword","image","editJudge","disabled","dialogVisible","identity","username","gender","age","phoneNum","email","targetURL","avatar","form","rules","required","message","trigger","pattern","type","password","min","max","display","imgDisplay","created","load","find","init","methods","JSON","parse","sessionStorage","getItem","post","then","res","window","setItem","stringify"],"sources":["C:/Users/zhang/Desktop/myvueeee/flowers/src/assets/js/AllUserInfo.js"],"sourcesContent":["import request from \"@/utils/index\";\r\n\r\n// const {ElMessage} = require(\"element-plus\");\r\nexport default {\r\n    name: \"selfInfo\",\r\n    data() {\r\n        return {\r\n            showpassword: true,\r\n            image: \"\",\r\n            editJudge: true,\r\n            disabled: true,\r\n            dialogVisible: false,\r\n            identity: \"\",\r\n            username: \"\",\r\n            name: \"\",\r\n            gender: \"\",\r\n            age: \"\",\r\n            phoneNum: \"\",\r\n            email: \"\",\r\n            targetURL: \"\",\r\n            avatar: \"\",\r\n            form: {\r\n                username: \"\",\r\n                name: \"\",\r\n                gender: \"\",\r\n                age: \"\",\r\n                phoneNum: \"\",\r\n                email: \"\",\r\n            },\r\n            rules: {\r\n                username: [\r\n                    {required: true, message: \"请输入账号\", trigger: \"blur\"},\r\n                    {\r\n                        pattern: /^[a-zA-Z0-9]{4,9}$/,\r\n                        message: \"必须由 4 到 9 个字母或数字组成\",\r\n                        trigger: \"blur\",\r\n                    },\r\n                ],\r\n                name: [\r\n                    {required: true, message: \"请输入姓名\", trigger: \"blur\"},\r\n                    {\r\n                        pattern: /^(?:[\\u4E00-\\u9FA5·]{2,10})$/,\r\n                        message: \"必须由 2 到 10 个汉字组成\",\r\n                        trigger: \"blur\",\r\n                    },\r\n                ],\r\n                gender: [{required: true, message: \"请选择性别\", trigger: \"change\"}],\r\n                age: [\r\n                    {required: true, message: \"请输入年龄\", trigger: \"blur\"},\r\n                    {type: \"number\", message: \"年龄必须为数字值\", trigger: \"blur\"},\r\n                    {\r\n                        pattern: /^(1|[1-9]\\d?|100)$/,\r\n                        message: \"范围：1-100\",\r\n                        trigger: \"blur\",\r\n                    },\r\n                ],\r\n                \r\n                email: [\r\n                    {type: \"email\", message: \"请输入正确的邮箱地址\", trigger: \"blur\"},\r\n                ],\r\n                password: [\r\n                    {required: true, message: \"请输入密码\", trigger: \"blur\"},\r\n                    {\r\n                        min: 6,\r\n                        max: 32,\r\n                        message: \"长度在 6 到 16 个字符\",\r\n                        trigger: \"blur\",\r\n                    },\r\n                ],\r\n               \r\n            },\r\n            display: {\r\n                display: \"none\",\r\n            },\r\n            imgDisplay: {\r\n                display: \"none\",\r\n            },\r\n        };\r\n    },\r\n    created() {\r\n        this.load();\r\n        this.find();\r\n        this.init(this.avatar);\r\n    },\r\n    methods: {\r\n        //获取成员信息页面信息\r\n        load() {\r\n            this.form = JSON.parse(sessionStorage.getItem(\"user\"));\r\n            this.identity = JSON.parse(sessionStorage.getItem(\"identity\"));\r\n            this.username = this.form.username;\r\n            this.name = this.form.name;\r\n            this.gender = this.form.gender;\r\n            this.age = this.form.age;\r\n            this.phoneNum = this.form.phoneNum;\r\n            this.email = this.form.email;\r\n            this.avatar = this.form.avatar;\r\n        },\r\n        //查询数据，更新session\r\n        find() {\r\n            this.form = JSON.parse(sessionStorage.getItem(\"user\"));\r\n            request.post(\"/\" + this.identity + \"/login\", this.form).then((res) => {\r\n                //更新sessionStorage\r\n                window.sessionStorage.setItem(\"user\", JSON.stringify(res.data));\r\n                //更新页面数据\r\n                this.load();\r\n            });\r\n        },\r\n        // Edit() {\r\n        //     this.dialogVisible = true;\r\n        //     this.$nextTick(() => {\r\n        //         this.$refs.form.resetFields();\r\n        //         this.form = JSON.parse(sessionStorage.getItem(\"user\"));\r\n        //     });\r\n        // },\r\n        // cancel() {\r\n        //     this.$refs.form.resetFields();\r\n        //     this.display = {display: \"none\"};\r\n        //     this.showpassword = true;\r\n        //     this.editJudge = true;\r\n        //     this.disabled = true;\r\n        //     this.dialogVisible = false;\r\n        // },\r\n        // async save() {\r\n        //     this.$refs.form.validate(async (valid) => {\r\n        //         if (valid) {\r\n        //             //修改\r\n        //             await request.put(\"/\" + this.identity + \"/update\", this.form).then((res) => {\r\n        //                 if (res.code === 200) {\r\n        //                     ElMessage({\r\n        //                         message: \"修改成功\",\r\n        //                         type: \"success\",\r\n        //                     });\r\n        //                     //更新sessionStorage\r\n        //                     window.sessionStorage.setItem(\r\n        //                         \"user\",\r\n        //                         JSON.stringify(this.form)\r\n        //                     );\r\n        //                     this.find();\r\n        //                     this.dialogVisible = false;\r\n        //                 } else {\r\n        //                     ElMessage({\r\n        //                         message: res.msg,\r\n        //                         type: \"error\",\r\n        //                     });\r\n        //                 }\r\n        //             });\r\n        //         }\r\n        //     });\r\n        // },\r\n        //密码编辑状态\r\n        // EditPass() {\r\n        //     if (this.editJudge) {\r\n        //         this.display = {display: \"flex\"};\r\n        //         this.showpassword = false;\r\n        //         this.disabled = false;\r\n        //         this.editJudge = false;\r\n        //     } else {\r\n        //         this.display = {display: \"none\"};\r\n        //         this.showpassword = true;\r\n        //         this.editJudge = true;\r\n        //         this.disabled = true;\r\n        //     }\r\n        // },\r\n        //发送请求，获取头像\r\n        // async init(data) {\r\n        //     if (data === null || data === \"\") {\r\n        //         console.log(\"用户未设置头像\");\r\n        //         this.imgDisplay = {display: \"none\"};\r\n        //     } else {\r\n        //         this.imgDisplay = {display: \"block\"};\r\n        //         console.log(\"头像名称：\" + data);\r\n        //         await request.get(\"/files//\" + data).then((res) => {\r\n        //             if (res.code === \"0\") {\r\n        //                 this.image = res.data.data;\r\n        //             } else {\r\n        //                 ElMessage({\r\n        //                     message: res.msg,\r\n        //                     type: \"error\",\r\n        //                 });\r\n        //             }\r\n        //         });\r\n        //     }\r\n        // },\r\n        // async uploadSuccess() {\r\n        //     this.form = JSON.parse(sessionStorage.getItem(\"user\"));\r\n        //     await request.post(\"/files/uploadAvatar/\" + this.identity, this.form).then((res) => {\r\n        //         if (res.code === \"0\") {\r\n        //             ElMessage({\r\n        //                 message: \"设置成功\",\r\n        //                 type: \"success\",\r\n        //             });\r\n        //             //获取头像文件名\r\n        //             this.avatar = res.data;\r\n        //             console.log(\"上传成功：\" + this.avatar);\r\n        //             this.find();\r\n        //             this.init(this.avatar);\r\n        //         } else {\r\n        //             ElMessage({\r\n        //                 message: res.msg,\r\n        //                 type: \"error\",\r\n        //             });\r\n        //         }\r\n        //     });\r\n        // },\r\n    },\r\n};"],"mappings":"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":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}